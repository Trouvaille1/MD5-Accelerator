

================================================================
== Vitis HLS Report for 'md5_transform'
================================================================
* Date:           Mon Jul 17 20:41:50 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        md5_hls_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.923 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      106|      106|  1.060 us|  1.060 us|   32|   32|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 32, depth = 107


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 107
* Pipeline : 1
  Pipeline-0 : II = 32, D = 107, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 84 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.32>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%data_addr = getelementptr i8 %data, i64 0, i64 0" [md5.c:32]   --->   Operation 108 'getelementptr' 'data_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [2/2] (2.32ns)   --->   "%data_load = load i6 %data_addr" [md5.c:32]   --->   Operation 109 'load' 'data_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%data_addr_1 = getelementptr i8 %data, i64 0, i64 1" [md5.c:32]   --->   Operation 110 'getelementptr' 'data_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [2/2] (2.32ns)   --->   "%data_load_1 = load i6 %data_addr_1" [md5.c:32]   --->   Operation 111 'load' 'data_load_1' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 112 [1/2] (2.32ns)   --->   "%data_load = load i6 %data_addr" [md5.c:32]   --->   Operation 112 'load' 'data_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 113 [1/2] (2.32ns)   --->   "%data_load_1 = load i6 %data_addr_1" [md5.c:32]   --->   Operation 113 'load' 'data_load_1' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%data_addr_2 = getelementptr i8 %data, i64 0, i64 2" [md5.c:32]   --->   Operation 114 'getelementptr' 'data_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [2/2] (2.32ns)   --->   "%data_load_2 = load i6 %data_addr_2" [md5.c:32]   --->   Operation 115 'load' 'data_load_2' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%data_addr_3 = getelementptr i8 %data, i64 0, i64 3" [md5.c:32]   --->   Operation 116 'getelementptr' 'data_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 117 [2/2] (2.32ns)   --->   "%data_load_3 = load i6 %data_addr_3" [md5.c:32]   --->   Operation 117 'load' 'data_load_3' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 118 [1/2] (2.32ns)   --->   "%data_load_2 = load i6 %data_addr_2" [md5.c:32]   --->   Operation 118 'load' 'data_load_2' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_3 : Operation 119 [1/2] (2.32ns)   --->   "%data_load_3 = load i6 %data_addr_3" [md5.c:32]   --->   Operation 119 'load' 'data_load_3' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%data_addr_11 = getelementptr i8 %data, i64 0, i64 4" [md5.c:32]   --->   Operation 120 'getelementptr' 'data_addr_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [2/2] (2.32ns)   --->   "%data_load_12 = load i6 %data_addr_11" [md5.c:32]   --->   Operation 121 'load' 'data_load_12' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_3 : Operation 122 [1/1] (0.00ns)   --->   "%data_addr_16 = getelementptr i8 %data, i64 0, i64 5" [md5.c:32]   --->   Operation 122 'getelementptr' 'data_addr_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 123 [2/2] (2.32ns)   --->   "%data_load_16 = load i6 %data_addr_16" [md5.c:32]   --->   Operation 123 'load' 'data_load_16' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 4 <SV = 3> <Delay = 2.32>
ST_4 : Operation 124 [1/2] (2.32ns)   --->   "%data_load_12 = load i6 %data_addr_11" [md5.c:32]   --->   Operation 124 'load' 'data_load_12' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 125 [1/2] (2.32ns)   --->   "%data_load_16 = load i6 %data_addr_16" [md5.c:32]   --->   Operation 125 'load' 'data_load_16' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%data_addr_17 = getelementptr i8 %data, i64 0, i64 6" [md5.c:32]   --->   Operation 126 'getelementptr' 'data_addr_17' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 127 [2/2] (2.32ns)   --->   "%data_load_17 = load i6 %data_addr_17" [md5.c:32]   --->   Operation 127 'load' 'data_load_17' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "%data_addr_18 = getelementptr i8 %data, i64 0, i64 7" [md5.c:32]   --->   Operation 128 'getelementptr' 'data_addr_18' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 129 [2/2] (2.32ns)   --->   "%data_load_18 = load i6 %data_addr_18" [md5.c:32]   --->   Operation 129 'load' 'data_load_18' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 5 <SV = 4> <Delay = 2.32>
ST_5 : Operation 130 [1/2] (2.32ns)   --->   "%data_load_17 = load i6 %data_addr_17" [md5.c:32]   --->   Operation 130 'load' 'data_load_17' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 131 [1/2] (2.32ns)   --->   "%data_load_18 = load i6 %data_addr_18" [md5.c:32]   --->   Operation 131 'load' 'data_load_18' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 132 [1/1] (0.00ns)   --->   "%data_addr_19 = getelementptr i8 %data, i64 0, i64 8" [md5.c:32]   --->   Operation 132 'getelementptr' 'data_addr_19' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 133 [2/2] (2.32ns)   --->   "%data_load_19 = load i6 %data_addr_19" [md5.c:32]   --->   Operation 133 'load' 'data_load_19' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 134 [1/1] (0.00ns)   --->   "%data_addr_20 = getelementptr i8 %data, i64 0, i64 9" [md5.c:32]   --->   Operation 134 'getelementptr' 'data_addr_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 135 [2/2] (2.32ns)   --->   "%data_load_20 = load i6 %data_addr_20" [md5.c:32]   --->   Operation 135 'load' 'data_load_20' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 6 <SV = 5> <Delay = 2.32>
ST_6 : Operation 136 [1/2] (2.32ns)   --->   "%data_load_19 = load i6 %data_addr_19" [md5.c:32]   --->   Operation 136 'load' 'data_load_19' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_6 : Operation 137 [1/2] (2.32ns)   --->   "%data_load_20 = load i6 %data_addr_20" [md5.c:32]   --->   Operation 137 'load' 'data_load_20' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_6 : Operation 138 [1/1] (0.00ns)   --->   "%data_addr_21 = getelementptr i8 %data, i64 0, i64 10" [md5.c:32]   --->   Operation 138 'getelementptr' 'data_addr_21' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 139 [2/2] (2.32ns)   --->   "%data_load_21 = load i6 %data_addr_21" [md5.c:32]   --->   Operation 139 'load' 'data_load_21' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_6 : Operation 140 [1/1] (0.00ns)   --->   "%data_addr_22 = getelementptr i8 %data, i64 0, i64 11" [md5.c:32]   --->   Operation 140 'getelementptr' 'data_addr_22' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 141 [2/2] (2.32ns)   --->   "%data_load_22 = load i6 %data_addr_22" [md5.c:32]   --->   Operation 141 'load' 'data_load_22' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 7 <SV = 6> <Delay = 2.32>
ST_7 : Operation 142 [1/2] (2.32ns)   --->   "%data_load_21 = load i6 %data_addr_21" [md5.c:32]   --->   Operation 142 'load' 'data_load_21' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 143 [1/2] (2.32ns)   --->   "%data_load_22 = load i6 %data_addr_22" [md5.c:32]   --->   Operation 143 'load' 'data_load_22' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 144 [1/1] (0.00ns)   --->   "%data_addr_23 = getelementptr i8 %data, i64 0, i64 12" [md5.c:32]   --->   Operation 144 'getelementptr' 'data_addr_23' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 145 [2/2] (2.32ns)   --->   "%data_load_23 = load i6 %data_addr_23" [md5.c:32]   --->   Operation 145 'load' 'data_load_23' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 146 [1/1] (0.00ns)   --->   "%data_addr_24 = getelementptr i8 %data, i64 0, i64 13" [md5.c:32]   --->   Operation 146 'getelementptr' 'data_addr_24' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 147 [2/2] (2.32ns)   --->   "%data_load_24 = load i6 %data_addr_24" [md5.c:32]   --->   Operation 147 'load' 'data_load_24' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 8 <SV = 7> <Delay = 2.32>
ST_8 : Operation 148 [1/2] (2.32ns)   --->   "%data_load_23 = load i6 %data_addr_23" [md5.c:32]   --->   Operation 148 'load' 'data_load_23' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 149 [1/2] (2.32ns)   --->   "%data_load_24 = load i6 %data_addr_24" [md5.c:32]   --->   Operation 149 'load' 'data_load_24' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 150 [1/1] (0.00ns)   --->   "%data_addr_25 = getelementptr i8 %data, i64 0, i64 14" [md5.c:32]   --->   Operation 150 'getelementptr' 'data_addr_25' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 151 [2/2] (2.32ns)   --->   "%data_load_25 = load i6 %data_addr_25" [md5.c:32]   --->   Operation 151 'load' 'data_load_25' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 152 [1/1] (0.00ns)   --->   "%data_addr_26 = getelementptr i8 %data, i64 0, i64 15" [md5.c:32]   --->   Operation 152 'getelementptr' 'data_addr_26' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 153 [2/2] (2.32ns)   --->   "%data_load_26 = load i6 %data_addr_26" [md5.c:32]   --->   Operation 153 'load' 'data_load_26' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 9 <SV = 8> <Delay = 2.32>
ST_9 : Operation 154 [1/2] (2.32ns)   --->   "%data_load_25 = load i6 %data_addr_25" [md5.c:32]   --->   Operation 154 'load' 'data_load_25' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 155 [1/2] (2.32ns)   --->   "%data_load_26 = load i6 %data_addr_26" [md5.c:32]   --->   Operation 155 'load' 'data_load_26' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 156 [1/1] (0.00ns)   --->   "%data_addr_4 = getelementptr i8 %data, i64 0, i64 16" [md5.c:32]   --->   Operation 156 'getelementptr' 'data_addr_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 157 [2/2] (2.32ns)   --->   "%data_load_4 = load i6 %data_addr_4" [md5.c:32]   --->   Operation 157 'load' 'data_load_4' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 158 [1/1] (0.00ns)   --->   "%data_addr_27 = getelementptr i8 %data, i64 0, i64 17" [md5.c:32]   --->   Operation 158 'getelementptr' 'data_addr_27' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 159 [2/2] (2.32ns)   --->   "%data_load_27 = load i6 %data_addr_27" [md5.c:32]   --->   Operation 159 'load' 'data_load_27' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 10 <SV = 9> <Delay = 2.55>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "%ctx_state_3_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %ctx_state_3_read" [md5.c:32]   --->   Operation 160 'read' 'ctx_state_3_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns)   --->   "%ctx_state_2_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %ctx_state_2_read" [md5.c:32]   --->   Operation 161 'read' 'ctx_state_2_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (0.00ns)   --->   "%ctx_state_1_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %ctx_state_1_read" [md5.c:32]   --->   Operation 162 'read' 'ctx_state_1_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 163 [1/2] (2.32ns)   --->   "%data_load_4 = load i6 %data_addr_4" [md5.c:32]   --->   Operation 163 'load' 'data_load_4' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_10 : Operation 164 [1/2] (2.32ns)   --->   "%data_load_27 = load i6 %data_addr_27" [md5.c:32]   --->   Operation 164 'load' 'data_load_27' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_10 : Operation 165 [1/1] (0.00ns)   --->   "%data_addr_28 = getelementptr i8 %data, i64 0, i64 18" [md5.c:32]   --->   Operation 165 'getelementptr' 'data_addr_28' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 166 [2/2] (2.32ns)   --->   "%data_load_28 = load i6 %data_addr_28" [md5.c:32]   --->   Operation 166 'load' 'data_load_28' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_10 : Operation 167 [1/1] (0.00ns)   --->   "%data_addr_29 = getelementptr i8 %data, i64 0, i64 19" [md5.c:32]   --->   Operation 167 'getelementptr' 'data_addr_29' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 168 [2/2] (2.32ns)   --->   "%data_load_29 = load i6 %data_addr_29" [md5.c:32]   --->   Operation 168 'load' 'data_load_29' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_10 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node add_ln39_1)   --->   "%and_ln39 = and i32 %ctx_state_2_read_1, i32 %ctx_state_1_read_1" [md5.c:39]   --->   Operation 169 'and' 'and_ln39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln39_1)   --->   "%xor_ln39 = xor i32 %ctx_state_1_read_1, i32 4294967295" [md5.c:39]   --->   Operation 170 'xor' 'xor_ln39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln39_1)   --->   "%and_ln39_1 = and i32 %ctx_state_3_read_1, i32 %xor_ln39" [md5.c:39]   --->   Operation 171 'and' 'and_ln39_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node add_ln39_1)   --->   "%or_ln39 = or i32 %and_ln39_1, i32 %and_ln39" [md5.c:39]   --->   Operation 172 'or' 'or_ln39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 173 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln39_1 = add i32 %or_ln39, i32 3614090360" [md5.c:39]   --->   Operation 173 'add' 'add_ln39_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.92>
ST_11 : Operation 174 [1/1] (0.00ns)   --->   "%ctx_state_0_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %ctx_state_0_read" [md5.c:32]   --->   Operation 174 'read' 'ctx_state_0_read_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 175 [1/1] (0.00ns)   --->   "%or_ln32_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_3, i8 %data_load_2, i8 %data_load_1, i8 %data_load" [md5.c:32]   --->   Operation 175 'bitconcatenate' 'or_ln32_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 176 [1/2] (2.32ns)   --->   "%data_load_28 = load i6 %data_addr_28" [md5.c:32]   --->   Operation 176 'load' 'data_load_28' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_11 : Operation 177 [1/2] (2.32ns)   --->   "%data_load_29 = load i6 %data_addr_29" [md5.c:32]   --->   Operation 177 'load' 'data_load_29' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_11 : Operation 178 [1/1] (0.00ns)   --->   "%data_addr_5 = getelementptr i8 %data, i64 0, i64 20" [md5.c:32]   --->   Operation 178 'getelementptr' 'data_addr_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 179 [2/2] (2.32ns)   --->   "%data_load_5 = load i6 %data_addr_5" [md5.c:32]   --->   Operation 179 'load' 'data_load_5' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_11 : Operation 180 [1/1] (0.00ns)   --->   "%data_addr_30 = getelementptr i8 %data, i64 0, i64 21" [md5.c:32]   --->   Operation 180 'getelementptr' 'data_addr_30' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 181 [2/2] (2.32ns)   --->   "%data_load_30 = load i6 %data_addr_30" [md5.c:32]   --->   Operation 181 'load' 'data_load_30' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_11 : Operation 182 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln39 = add i32 %or_ln32_5, i32 %ctx_state_0_read_1" [md5.c:39]   --->   Operation 182 'add' 'add_ln39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 183 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a = add i32 %add_ln39_1, i32 %add_ln39" [md5.c:39]   --->   Operation 183 'add' 'a' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 184 [1/1] (0.00ns)   --->   "%trunc_ln39 = trunc i32 %a" [md5.c:39]   --->   Operation 184 'trunc' 'trunc_ln39' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 185 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %a, i32 25, i32 31" [md5.c:39]   --->   Operation 185 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 186 [1/1] (0.00ns)   --->   "%or_ln39_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln39, i7 %lshr_ln" [md5.c:39]   --->   Operation 186 'bitconcatenate' 'or_ln39_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 187 [1/1] (2.55ns)   --->   "%a_1 = add i32 %or_ln39_1, i32 %ctx_state_1_read_1" [md5.c:39]   --->   Operation 187 'add' 'a_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.92>
ST_12 : Operation 188 [1/1] (0.00ns)   --->   "%or_ln32_5_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_18, i8 %data_load_17, i8 %data_load_16, i8 %data_load_12" [md5.c:32]   --->   Operation 188 'bitconcatenate' 'or_ln32_5_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 189 [1/2] (2.32ns)   --->   "%data_load_5 = load i6 %data_addr_5" [md5.c:32]   --->   Operation 189 'load' 'data_load_5' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_12 : Operation 190 [1/2] (2.32ns)   --->   "%data_load_30 = load i6 %data_addr_30" [md5.c:32]   --->   Operation 190 'load' 'data_load_30' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_12 : Operation 191 [1/1] (0.00ns)   --->   "%data_addr_31 = getelementptr i8 %data, i64 0, i64 22" [md5.c:32]   --->   Operation 191 'getelementptr' 'data_addr_31' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 192 [2/2] (2.32ns)   --->   "%data_load_31 = load i6 %data_addr_31" [md5.c:32]   --->   Operation 192 'load' 'data_load_31' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_12 : Operation 193 [1/1] (0.00ns)   --->   "%data_addr_32 = getelementptr i8 %data, i64 0, i64 23" [md5.c:32]   --->   Operation 193 'getelementptr' 'data_addr_32' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 194 [2/2] (2.32ns)   --->   "%data_load_32 = load i6 %data_addr_32" [md5.c:32]   --->   Operation 194 'load' 'data_load_32' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_12 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%and_ln40 = and i32 %a_1, i32 %ctx_state_1_read_1" [md5.c:40]   --->   Operation 195 'and' 'and_ln40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%xor_ln40 = xor i32 %a_1, i32 4294967295" [md5.c:40]   --->   Operation 196 'xor' 'xor_ln40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%and_ln40_1 = and i32 %ctx_state_2_read_1, i32 %xor_ln40" [md5.c:40]   --->   Operation 197 'and' 'and_ln40_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%or_ln40 = or i32 %and_ln40, i32 %and_ln40_1" [md5.c:40]   --->   Operation 198 'or' 'or_ln40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 199 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln40 = add i32 %or_ln32_5_1, i32 %ctx_state_3_read_1" [md5.c:40]   --->   Operation 199 'add' 'add_ln40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 200 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln40_1 = add i32 %or_ln40, i32 3905402710" [md5.c:40]   --->   Operation 200 'add' 'add_ln40_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 201 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d = add i32 %add_ln40_1, i32 %add_ln40" [md5.c:40]   --->   Operation 201 'add' 'd' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 202 [1/1] (0.00ns)   --->   "%trunc_ln40 = trunc i32 %d" [md5.c:40]   --->   Operation 202 'trunc' 'trunc_ln40' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 203 [1/1] (0.00ns)   --->   "%lshr_ln1 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %d, i32 20, i32 31" [md5.c:40]   --->   Operation 203 'partselect' 'lshr_ln1' <Predicate = true> <Delay = 0.00>

State 13 <SV = 12> <Delay = 5.10>
ST_13 : Operation 204 [1/2] (2.32ns)   --->   "%data_load_31 = load i6 %data_addr_31" [md5.c:32]   --->   Operation 204 'load' 'data_load_31' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_13 : Operation 205 [1/2] (2.32ns)   --->   "%data_load_32 = load i6 %data_addr_32" [md5.c:32]   --->   Operation 205 'load' 'data_load_32' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_13 : Operation 206 [1/1] (0.00ns)   --->   "%data_addr_6 = getelementptr i8 %data, i64 0, i64 24" [md5.c:32]   --->   Operation 206 'getelementptr' 'data_addr_6' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 207 [2/2] (2.32ns)   --->   "%data_load_6 = load i6 %data_addr_6" [md5.c:32]   --->   Operation 207 'load' 'data_load_6' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_13 : Operation 208 [1/1] (0.00ns)   --->   "%data_addr_33 = getelementptr i8 %data, i64 0, i64 25" [md5.c:32]   --->   Operation 208 'getelementptr' 'data_addr_33' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 209 [2/2] (2.32ns)   --->   "%data_load_33 = load i6 %data_addr_33" [md5.c:32]   --->   Operation 209 'load' 'data_load_33' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_13 : Operation 210 [1/1] (0.00ns)   --->   "%or_ln40_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %trunc_ln40, i12 %lshr_ln1" [md5.c:40]   --->   Operation 210 'bitconcatenate' 'or_ln40_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 211 [1/1] (2.55ns)   --->   "%d_1 = add i32 %or_ln40_1, i32 %a_1" [md5.c:40]   --->   Operation 211 'add' 'd_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node add_ln41_1)   --->   "%and_ln41 = and i32 %d_1, i32 %a_1" [md5.c:41]   --->   Operation 212 'and' 'and_ln41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node add_ln41_1)   --->   "%xor_ln41 = xor i32 %d_1, i32 4294967295" [md5.c:41]   --->   Operation 213 'xor' 'xor_ln41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node add_ln41_1)   --->   "%and_ln41_1 = and i32 %ctx_state_1_read_1, i32 %xor_ln41" [md5.c:41]   --->   Operation 214 'and' 'and_ln41_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node add_ln41_1)   --->   "%or_ln41 = or i32 %and_ln41, i32 %and_ln41_1" [md5.c:41]   --->   Operation 215 'or' 'or_ln41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 216 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln41_1 = add i32 %or_ln41, i32 606105819" [md5.c:41]   --->   Operation 216 'add' 'add_ln41_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.92>
ST_14 : Operation 217 [1/1] (0.00ns)   --->   "%or_ln32_5_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_22, i8 %data_load_21, i8 %data_load_20, i8 %data_load_19" [md5.c:32]   --->   Operation 217 'bitconcatenate' 'or_ln32_5_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 218 [1/2] (2.32ns)   --->   "%data_load_6 = load i6 %data_addr_6" [md5.c:32]   --->   Operation 218 'load' 'data_load_6' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_14 : Operation 219 [1/2] (2.32ns)   --->   "%data_load_33 = load i6 %data_addr_33" [md5.c:32]   --->   Operation 219 'load' 'data_load_33' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_14 : Operation 220 [1/1] (0.00ns)   --->   "%data_addr_34 = getelementptr i8 %data, i64 0, i64 26" [md5.c:32]   --->   Operation 220 'getelementptr' 'data_addr_34' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 221 [2/2] (2.32ns)   --->   "%data_load_34 = load i6 %data_addr_34" [md5.c:32]   --->   Operation 221 'load' 'data_load_34' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_14 : Operation 222 [1/1] (0.00ns)   --->   "%data_addr_35 = getelementptr i8 %data, i64 0, i64 27" [md5.c:32]   --->   Operation 222 'getelementptr' 'data_addr_35' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 223 [2/2] (2.32ns)   --->   "%data_load_35 = load i6 %data_addr_35" [md5.c:32]   --->   Operation 223 'load' 'data_load_35' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_14 : Operation 224 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln41 = add i32 %or_ln32_5_2, i32 %ctx_state_2_read_1" [md5.c:41]   --->   Operation 224 'add' 'add_ln41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 225 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c = add i32 %add_ln41_1, i32 %add_ln41" [md5.c:41]   --->   Operation 225 'add' 'c' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 226 [1/1] (0.00ns)   --->   "%trunc_ln41 = trunc i32 %c" [md5.c:41]   --->   Operation 226 'trunc' 'trunc_ln41' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 227 [1/1] (0.00ns)   --->   "%lshr_ln2 = partselect i17 @_ssdm_op_PartSelect.i17.i32.i32.i32, i32 %c, i32 15, i32 31" [md5.c:41]   --->   Operation 227 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 228 [1/1] (0.00ns)   --->   "%or_ln41_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i15.i17, i15 %trunc_ln41, i17 %lshr_ln2" [md5.c:41]   --->   Operation 228 'bitconcatenate' 'or_ln41_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 229 [1/1] (2.55ns)   --->   "%c_1 = add i32 %or_ln41_1, i32 %d_1" [md5.c:41]   --->   Operation 229 'add' 'c_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.92>
ST_15 : Operation 230 [1/1] (0.00ns)   --->   "%or_ln32_5_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_26, i8 %data_load_25, i8 %data_load_24, i8 %data_load_23" [md5.c:32]   --->   Operation 230 'bitconcatenate' 'or_ln32_5_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 231 [1/2] (2.32ns)   --->   "%data_load_34 = load i6 %data_addr_34" [md5.c:32]   --->   Operation 231 'load' 'data_load_34' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_15 : Operation 232 [1/2] (2.32ns)   --->   "%data_load_35 = load i6 %data_addr_35" [md5.c:32]   --->   Operation 232 'load' 'data_load_35' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_15 : Operation 233 [1/1] (0.00ns)   --->   "%data_addr_7 = getelementptr i8 %data, i64 0, i64 28" [md5.c:32]   --->   Operation 233 'getelementptr' 'data_addr_7' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 234 [2/2] (2.32ns)   --->   "%data_load_7 = load i6 %data_addr_7" [md5.c:32]   --->   Operation 234 'load' 'data_load_7' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_15 : Operation 235 [1/1] (0.00ns)   --->   "%data_addr_36 = getelementptr i8 %data, i64 0, i64 29" [md5.c:32]   --->   Operation 235 'getelementptr' 'data_addr_36' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 236 [2/2] (2.32ns)   --->   "%data_load_36 = load i6 %data_addr_36" [md5.c:32]   --->   Operation 236 'load' 'data_load_36' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_15 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln42_1)   --->   "%and_ln42 = and i32 %c_1, i32 %d_1" [md5.c:42]   --->   Operation 237 'and' 'and_ln42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node add_ln42_1)   --->   "%xor_ln42 = xor i32 %c_1, i32 4294967295" [md5.c:42]   --->   Operation 238 'xor' 'xor_ln42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node add_ln42_1)   --->   "%and_ln42_1 = and i32 %a_1, i32 %xor_ln42" [md5.c:42]   --->   Operation 239 'and' 'and_ln42_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node add_ln42_1)   --->   "%or_ln42 = or i32 %and_ln42, i32 %and_ln42_1" [md5.c:42]   --->   Operation 240 'or' 'or_ln42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 241 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln42 = add i32 %or_ln32_5_3, i32 %ctx_state_1_read_1" [md5.c:42]   --->   Operation 241 'add' 'add_ln42' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 242 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln42_1 = add i32 %or_ln42, i32 3250441966" [md5.c:42]   --->   Operation 242 'add' 'add_ln42_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 243 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b = add i32 %add_ln42_1, i32 %add_ln42" [md5.c:42]   --->   Operation 243 'add' 'b' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 244 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i32 %b" [md5.c:42]   --->   Operation 244 'trunc' 'trunc_ln42' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 245 [1/1] (0.00ns)   --->   "%lshr_ln3 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %b, i32 10, i32 31" [md5.c:42]   --->   Operation 245 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>

State 16 <SV = 15> <Delay = 5.10>
ST_16 : Operation 246 [1/2] (2.32ns)   --->   "%data_load_7 = load i6 %data_addr_7" [md5.c:32]   --->   Operation 246 'load' 'data_load_7' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_16 : Operation 247 [1/2] (2.32ns)   --->   "%data_load_36 = load i6 %data_addr_36" [md5.c:32]   --->   Operation 247 'load' 'data_load_36' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_16 : Operation 248 [1/1] (0.00ns)   --->   "%data_addr_37 = getelementptr i8 %data, i64 0, i64 30" [md5.c:32]   --->   Operation 248 'getelementptr' 'data_addr_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 249 [2/2] (2.32ns)   --->   "%data_load_37 = load i6 %data_addr_37" [md5.c:32]   --->   Operation 249 'load' 'data_load_37' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_16 : Operation 250 [1/1] (0.00ns)   --->   "%data_addr_38 = getelementptr i8 %data, i64 0, i64 31" [md5.c:32]   --->   Operation 250 'getelementptr' 'data_addr_38' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 251 [2/2] (2.32ns)   --->   "%data_load_38 = load i6 %data_addr_38" [md5.c:32]   --->   Operation 251 'load' 'data_load_38' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_16 : Operation 252 [1/1] (0.00ns)   --->   "%or_ln42_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i10.i22, i10 %trunc_ln42, i22 %lshr_ln3" [md5.c:42]   --->   Operation 252 'bitconcatenate' 'or_ln42_1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 253 [1/1] (2.55ns)   --->   "%b_1 = add i32 %or_ln42_1, i32 %c_1" [md5.c:42]   --->   Operation 253 'add' 'b_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node add_ln43_1)   --->   "%and_ln43 = and i32 %b_1, i32 %c_1" [md5.c:43]   --->   Operation 254 'and' 'and_ln43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node add_ln43_1)   --->   "%xor_ln43 = xor i32 %b_1, i32 4294967295" [md5.c:43]   --->   Operation 255 'xor' 'xor_ln43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node add_ln43_1)   --->   "%and_ln43_1 = and i32 %d_1, i32 %xor_ln43" [md5.c:43]   --->   Operation 256 'and' 'and_ln43_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node add_ln43_1)   --->   "%or_ln43 = or i32 %and_ln43, i32 %and_ln43_1" [md5.c:43]   --->   Operation 257 'or' 'or_ln43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 258 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln43_1 = add i32 %or_ln43, i32 4118548399" [md5.c:43]   --->   Operation 258 'add' 'add_ln43_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.92>
ST_17 : Operation 259 [1/1] (0.00ns)   --->   "%or_ln32_5_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_29, i8 %data_load_28, i8 %data_load_27, i8 %data_load_4" [md5.c:32]   --->   Operation 259 'bitconcatenate' 'or_ln32_5_4' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 260 [1/2] (2.32ns)   --->   "%data_load_37 = load i6 %data_addr_37" [md5.c:32]   --->   Operation 260 'load' 'data_load_37' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_17 : Operation 261 [1/2] (2.32ns)   --->   "%data_load_38 = load i6 %data_addr_38" [md5.c:32]   --->   Operation 261 'load' 'data_load_38' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_17 : Operation 262 [1/1] (0.00ns)   --->   "%data_addr_8 = getelementptr i8 %data, i64 0, i64 32" [md5.c:32]   --->   Operation 262 'getelementptr' 'data_addr_8' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 263 [2/2] (2.32ns)   --->   "%data_load_8 = load i6 %data_addr_8" [md5.c:32]   --->   Operation 263 'load' 'data_load_8' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_17 : Operation 264 [1/1] (0.00ns)   --->   "%data_addr_39 = getelementptr i8 %data, i64 0, i64 33" [md5.c:32]   --->   Operation 264 'getelementptr' 'data_addr_39' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 265 [2/2] (2.32ns)   --->   "%data_load_39 = load i6 %data_addr_39" [md5.c:32]   --->   Operation 265 'load' 'data_load_39' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_17 : Operation 266 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln43 = add i32 %or_ln32_5_4, i32 %a_1" [md5.c:43]   --->   Operation 266 'add' 'add_ln43' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 267 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_2 = add i32 %add_ln43_1, i32 %add_ln43" [md5.c:43]   --->   Operation 267 'add' 'a_2' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 268 [1/1] (0.00ns)   --->   "%trunc_ln43 = trunc i32 %a_2" [md5.c:43]   --->   Operation 268 'trunc' 'trunc_ln43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 269 [1/1] (0.00ns)   --->   "%lshr_ln4 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %a_2, i32 25, i32 31" [md5.c:43]   --->   Operation 269 'partselect' 'lshr_ln4' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 270 [1/1] (0.00ns)   --->   "%or_ln43_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln43, i7 %lshr_ln4" [md5.c:43]   --->   Operation 270 'bitconcatenate' 'or_ln43_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 271 [1/1] (2.55ns)   --->   "%a_3 = add i32 %or_ln43_1, i32 %b_1" [md5.c:43]   --->   Operation 271 'add' 'a_3' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 6.92>
ST_18 : Operation 272 [1/1] (0.00ns)   --->   "%or_ln32_5_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_32, i8 %data_load_31, i8 %data_load_30, i8 %data_load_5" [md5.c:32]   --->   Operation 272 'bitconcatenate' 'or_ln32_5_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 273 [1/2] (2.32ns)   --->   "%data_load_8 = load i6 %data_addr_8" [md5.c:32]   --->   Operation 273 'load' 'data_load_8' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_18 : Operation 274 [1/2] (2.32ns)   --->   "%data_load_39 = load i6 %data_addr_39" [md5.c:32]   --->   Operation 274 'load' 'data_load_39' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_18 : Operation 275 [1/1] (0.00ns)   --->   "%data_addr_40 = getelementptr i8 %data, i64 0, i64 34" [md5.c:32]   --->   Operation 275 'getelementptr' 'data_addr_40' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 276 [2/2] (2.32ns)   --->   "%data_load_40 = load i6 %data_addr_40" [md5.c:32]   --->   Operation 276 'load' 'data_load_40' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_18 : Operation 277 [1/1] (0.00ns)   --->   "%data_addr_41 = getelementptr i8 %data, i64 0, i64 35" [md5.c:32]   --->   Operation 277 'getelementptr' 'data_addr_41' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 278 [2/2] (2.32ns)   --->   "%data_load_41 = load i6 %data_addr_41" [md5.c:32]   --->   Operation 278 'load' 'data_load_41' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_18 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%and_ln44 = and i32 %a_3, i32 %b_1" [md5.c:44]   --->   Operation 279 'and' 'and_ln44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%xor_ln44 = xor i32 %a_3, i32 4294967295" [md5.c:44]   --->   Operation 280 'xor' 'xor_ln44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%and_ln44_1 = and i32 %c_1, i32 %xor_ln44" [md5.c:44]   --->   Operation 281 'and' 'and_ln44_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node add_ln44_1)   --->   "%or_ln44 = or i32 %and_ln44, i32 %and_ln44_1" [md5.c:44]   --->   Operation 282 'or' 'or_ln44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 283 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln44 = add i32 %d_1, i32 %or_ln32_5_5" [md5.c:44]   --->   Operation 283 'add' 'add_ln44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 284 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln44_1 = add i32 %or_ln44, i32 1200080426" [md5.c:44]   --->   Operation 284 'add' 'add_ln44_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 285 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_2 = add i32 %add_ln44_1, i32 %add_ln44" [md5.c:44]   --->   Operation 285 'add' 'd_2' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 286 [1/1] (0.00ns)   --->   "%trunc_ln44 = trunc i32 %d_2" [md5.c:44]   --->   Operation 286 'trunc' 'trunc_ln44' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 287 [1/1] (0.00ns)   --->   "%lshr_ln5 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %d_2, i32 20, i32 31" [md5.c:44]   --->   Operation 287 'partselect' 'lshr_ln5' <Predicate = true> <Delay = 0.00>

State 19 <SV = 18> <Delay = 5.10>
ST_19 : Operation 288 [1/1] (0.00ns)   --->   "%or_ln32_5_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_35, i8 %data_load_34, i8 %data_load_33, i8 %data_load_6" [md5.c:32]   --->   Operation 288 'bitconcatenate' 'or_ln32_5_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 289 [1/2] (2.32ns)   --->   "%data_load_40 = load i6 %data_addr_40" [md5.c:32]   --->   Operation 289 'load' 'data_load_40' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_19 : Operation 290 [1/2] (2.32ns)   --->   "%data_load_41 = load i6 %data_addr_41" [md5.c:32]   --->   Operation 290 'load' 'data_load_41' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_19 : Operation 291 [1/1] (0.00ns)   --->   "%data_addr_9 = getelementptr i8 %data, i64 0, i64 36" [md5.c:32]   --->   Operation 291 'getelementptr' 'data_addr_9' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 292 [2/2] (2.32ns)   --->   "%data_load_9 = load i6 %data_addr_9" [md5.c:32]   --->   Operation 292 'load' 'data_load_9' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_19 : Operation 293 [1/1] (0.00ns)   --->   "%data_addr_42 = getelementptr i8 %data, i64 0, i64 37" [md5.c:32]   --->   Operation 293 'getelementptr' 'data_addr_42' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 294 [2/2] (2.32ns)   --->   "%data_load_42 = load i6 %data_addr_42" [md5.c:32]   --->   Operation 294 'load' 'data_load_42' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_19 : Operation 295 [1/1] (0.00ns)   --->   "%or_ln44_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %trunc_ln44, i12 %lshr_ln5" [md5.c:44]   --->   Operation 295 'bitconcatenate' 'or_ln44_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 296 [1/1] (2.55ns)   --->   "%d_3 = add i32 %or_ln44_1, i32 %a_3" [md5.c:44]   --->   Operation 296 'add' 'd_3' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node add_ln45_1)   --->   "%and_ln45 = and i32 %d_3, i32 %a_3" [md5.c:45]   --->   Operation 297 'and' 'and_ln45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node add_ln45_1)   --->   "%xor_ln45 = xor i32 %d_3, i32 4294967295" [md5.c:45]   --->   Operation 298 'xor' 'xor_ln45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 299 [1/1] (0.00ns) (grouped into LUT with out node add_ln45_1)   --->   "%and_ln45_1 = and i32 %b_1, i32 %xor_ln45" [md5.c:45]   --->   Operation 299 'and' 'and_ln45_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node add_ln45_1)   --->   "%or_ln45 = or i32 %and_ln45, i32 %and_ln45_1" [md5.c:45]   --->   Operation 300 'or' 'or_ln45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 301 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln45_1 = add i32 %or_ln32_5_6, i32 %or_ln45" [md5.c:45]   --->   Operation 301 'add' 'add_ln45_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 6.92>
ST_20 : Operation 302 [1/2] (2.32ns)   --->   "%data_load_9 = load i6 %data_addr_9" [md5.c:32]   --->   Operation 302 'load' 'data_load_9' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_20 : Operation 303 [1/2] (2.32ns)   --->   "%data_load_42 = load i6 %data_addr_42" [md5.c:32]   --->   Operation 303 'load' 'data_load_42' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_20 : Operation 304 [1/1] (0.00ns)   --->   "%data_addr_43 = getelementptr i8 %data, i64 0, i64 38" [md5.c:32]   --->   Operation 304 'getelementptr' 'data_addr_43' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 305 [2/2] (2.32ns)   --->   "%data_load_43 = load i6 %data_addr_43" [md5.c:32]   --->   Operation 305 'load' 'data_load_43' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_20 : Operation 306 [1/1] (0.00ns)   --->   "%data_addr_44 = getelementptr i8 %data, i64 0, i64 39" [md5.c:32]   --->   Operation 306 'getelementptr' 'data_addr_44' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 307 [2/2] (2.32ns)   --->   "%data_load_44 = load i6 %data_addr_44" [md5.c:32]   --->   Operation 307 'load' 'data_load_44' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_20 : Operation 308 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln45 = add i32 %c_1, i32 2821735955" [md5.c:45]   --->   Operation 308 'add' 'add_ln45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 309 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_2 = add i32 %add_ln45_1, i32 %add_ln45" [md5.c:45]   --->   Operation 309 'add' 'c_2' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 310 [1/1] (0.00ns)   --->   "%trunc_ln45 = trunc i32 %c_2" [md5.c:45]   --->   Operation 310 'trunc' 'trunc_ln45' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 311 [1/1] (0.00ns)   --->   "%lshr_ln6 = partselect i17 @_ssdm_op_PartSelect.i17.i32.i32.i32, i32 %c_2, i32 15, i32 31" [md5.c:45]   --->   Operation 311 'partselect' 'lshr_ln6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 312 [1/1] (0.00ns)   --->   "%or_ln45_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i15.i17, i15 %trunc_ln45, i17 %lshr_ln6" [md5.c:45]   --->   Operation 312 'bitconcatenate' 'or_ln45_1' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 313 [1/1] (2.55ns)   --->   "%c_3 = add i32 %or_ln45_1, i32 %d_3" [md5.c:45]   --->   Operation 313 'add' 'c_3' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 6.92>
ST_21 : Operation 314 [1/1] (0.00ns)   --->   "%or_ln32_5_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_38, i8 %data_load_37, i8 %data_load_36, i8 %data_load_7" [md5.c:32]   --->   Operation 314 'bitconcatenate' 'or_ln32_5_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 315 [1/2] (2.32ns)   --->   "%data_load_43 = load i6 %data_addr_43" [md5.c:32]   --->   Operation 315 'load' 'data_load_43' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_21 : Operation 316 [1/2] (2.32ns)   --->   "%data_load_44 = load i6 %data_addr_44" [md5.c:32]   --->   Operation 316 'load' 'data_load_44' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_21 : Operation 317 [1/1] (0.00ns)   --->   "%data_addr_10 = getelementptr i8 %data, i64 0, i64 40" [md5.c:32]   --->   Operation 317 'getelementptr' 'data_addr_10' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 318 [2/2] (2.32ns)   --->   "%data_load_10 = load i6 %data_addr_10" [md5.c:32]   --->   Operation 318 'load' 'data_load_10' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_21 : Operation 319 [1/1] (0.00ns)   --->   "%data_addr_45 = getelementptr i8 %data, i64 0, i64 41" [md5.c:32]   --->   Operation 319 'getelementptr' 'data_addr_45' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 320 [2/2] (2.32ns)   --->   "%data_load_45 = load i6 %data_addr_45" [md5.c:32]   --->   Operation 320 'load' 'data_load_45' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_21 : Operation 321 [1/1] (0.00ns) (grouped into LUT with out node add_ln46_1)   --->   "%and_ln46 = and i32 %c_3, i32 %d_3" [md5.c:46]   --->   Operation 321 'and' 'and_ln46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 322 [1/1] (0.00ns) (grouped into LUT with out node add_ln46_1)   --->   "%xor_ln46 = xor i32 %c_3, i32 4294967295" [md5.c:46]   --->   Operation 322 'xor' 'xor_ln46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 323 [1/1] (0.00ns) (grouped into LUT with out node add_ln46_1)   --->   "%and_ln46_1 = and i32 %a_3, i32 %xor_ln46" [md5.c:46]   --->   Operation 323 'and' 'and_ln46_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 324 [1/1] (0.00ns) (grouped into LUT with out node add_ln46_1)   --->   "%or_ln46 = or i32 %and_ln46, i32 %and_ln46_1" [md5.c:46]   --->   Operation 324 'or' 'or_ln46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 325 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln46 = add i32 %b_1, i32 %or_ln32_5_7" [md5.c:46]   --->   Operation 325 'add' 'add_ln46' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 326 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln46_1 = add i32 %or_ln46, i32 4249261313" [md5.c:46]   --->   Operation 326 'add' 'add_ln46_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 327 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_2 = add i32 %add_ln46_1, i32 %add_ln46" [md5.c:46]   --->   Operation 327 'add' 'b_2' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 328 [1/1] (0.00ns)   --->   "%trunc_ln46 = trunc i32 %b_2" [md5.c:46]   --->   Operation 328 'trunc' 'trunc_ln46' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 329 [1/1] (0.00ns)   --->   "%lshr_ln7 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %b_2, i32 10, i32 31" [md5.c:46]   --->   Operation 329 'partselect' 'lshr_ln7' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 5.10>
ST_22 : Operation 330 [1/2] (2.32ns)   --->   "%data_load_10 = load i6 %data_addr_10" [md5.c:32]   --->   Operation 330 'load' 'data_load_10' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_22 : Operation 331 [1/2] (2.32ns)   --->   "%data_load_45 = load i6 %data_addr_45" [md5.c:32]   --->   Operation 331 'load' 'data_load_45' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_22 : Operation 332 [1/1] (0.00ns)   --->   "%data_addr_46 = getelementptr i8 %data, i64 0, i64 42" [md5.c:32]   --->   Operation 332 'getelementptr' 'data_addr_46' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 333 [2/2] (2.32ns)   --->   "%data_load_46 = load i6 %data_addr_46" [md5.c:32]   --->   Operation 333 'load' 'data_load_46' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_22 : Operation 334 [1/1] (0.00ns)   --->   "%data_addr_47 = getelementptr i8 %data, i64 0, i64 43" [md5.c:32]   --->   Operation 334 'getelementptr' 'data_addr_47' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 335 [2/2] (2.32ns)   --->   "%data_load_47 = load i6 %data_addr_47" [md5.c:32]   --->   Operation 335 'load' 'data_load_47' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_22 : Operation 336 [1/1] (0.00ns)   --->   "%or_ln46_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i10.i22, i10 %trunc_ln46, i22 %lshr_ln7" [md5.c:46]   --->   Operation 336 'bitconcatenate' 'or_ln46_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 337 [1/1] (2.55ns)   --->   "%b_3 = add i32 %or_ln46_1, i32 %c_3" [md5.c:46]   --->   Operation 337 'add' 'b_3' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 338 [1/1] (0.00ns) (grouped into LUT with out node add_ln47_1)   --->   "%and_ln47 = and i32 %b_3, i32 %c_3" [md5.c:47]   --->   Operation 338 'and' 'and_ln47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 339 [1/1] (0.00ns) (grouped into LUT with out node add_ln47_1)   --->   "%xor_ln47 = xor i32 %b_3, i32 4294967295" [md5.c:47]   --->   Operation 339 'xor' 'xor_ln47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node add_ln47_1)   --->   "%and_ln47_1 = and i32 %d_3, i32 %xor_ln47" [md5.c:47]   --->   Operation 340 'and' 'and_ln47_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 341 [1/1] (0.00ns) (grouped into LUT with out node add_ln47_1)   --->   "%or_ln47 = or i32 %and_ln47, i32 %and_ln47_1" [md5.c:47]   --->   Operation 341 'or' 'or_ln47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 342 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln47_1 = add i32 %or_ln47, i32 1770035416" [md5.c:47]   --->   Operation 342 'add' 'add_ln47_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.92>
ST_23 : Operation 343 [1/1] (0.00ns)   --->   "%or_ln32_5_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_41, i8 %data_load_40, i8 %data_load_39, i8 %data_load_8" [md5.c:32]   --->   Operation 343 'bitconcatenate' 'or_ln32_5_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 344 [1/2] (2.32ns)   --->   "%data_load_46 = load i6 %data_addr_46" [md5.c:32]   --->   Operation 344 'load' 'data_load_46' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_23 : Operation 345 [1/2] (2.32ns)   --->   "%data_load_47 = load i6 %data_addr_47" [md5.c:32]   --->   Operation 345 'load' 'data_load_47' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_23 : Operation 346 [1/1] (0.00ns)   --->   "%data_addr_48 = getelementptr i8 %data, i64 0, i64 44" [md5.c:32]   --->   Operation 346 'getelementptr' 'data_addr_48' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 347 [2/2] (2.32ns)   --->   "%data_load_11 = load i6 %data_addr_48" [md5.c:32]   --->   Operation 347 'load' 'data_load_11' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_23 : Operation 348 [1/1] (0.00ns)   --->   "%data_addr_49 = getelementptr i8 %data, i64 0, i64 45" [md5.c:32]   --->   Operation 348 'getelementptr' 'data_addr_49' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 349 [2/2] (2.32ns)   --->   "%data_load_48 = load i6 %data_addr_49" [md5.c:32]   --->   Operation 349 'load' 'data_load_48' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_23 : Operation 350 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln47 = add i32 %a_3, i32 %or_ln32_5_8" [md5.c:47]   --->   Operation 350 'add' 'add_ln47' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 351 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_4 = add i32 %add_ln47_1, i32 %add_ln47" [md5.c:47]   --->   Operation 351 'add' 'a_4' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 352 [1/1] (0.00ns)   --->   "%trunc_ln47 = trunc i32 %a_4" [md5.c:47]   --->   Operation 352 'trunc' 'trunc_ln47' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 353 [1/1] (0.00ns)   --->   "%lshr_ln8 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %a_4, i32 25, i32 31" [md5.c:47]   --->   Operation 353 'partselect' 'lshr_ln8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 354 [1/1] (0.00ns)   --->   "%or_ln47_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln47, i7 %lshr_ln8" [md5.c:47]   --->   Operation 354 'bitconcatenate' 'or_ln47_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 355 [1/1] (2.55ns)   --->   "%a_5 = add i32 %or_ln47_1, i32 %b_3" [md5.c:47]   --->   Operation 355 'add' 'a_5' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.92>
ST_24 : Operation 356 [1/1] (0.00ns)   --->   "%or_ln32_5_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_44, i8 %data_load_43, i8 %data_load_42, i8 %data_load_9" [md5.c:32]   --->   Operation 356 'bitconcatenate' 'or_ln32_5_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 357 [1/2] (2.32ns)   --->   "%data_load_11 = load i6 %data_addr_48" [md5.c:32]   --->   Operation 357 'load' 'data_load_11' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_24 : Operation 358 [1/2] (2.32ns)   --->   "%data_load_48 = load i6 %data_addr_49" [md5.c:32]   --->   Operation 358 'load' 'data_load_48' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_24 : Operation 359 [1/1] (0.00ns)   --->   "%data_addr_50 = getelementptr i8 %data, i64 0, i64 46" [md5.c:32]   --->   Operation 359 'getelementptr' 'data_addr_50' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 360 [2/2] (2.32ns)   --->   "%data_load_49 = load i6 %data_addr_50" [md5.c:32]   --->   Operation 360 'load' 'data_load_49' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_24 : Operation 361 [1/1] (0.00ns)   --->   "%data_addr_51 = getelementptr i8 %data, i64 0, i64 47" [md5.c:32]   --->   Operation 361 'getelementptr' 'data_addr_51' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 362 [2/2] (2.32ns)   --->   "%data_load_50 = load i6 %data_addr_51" [md5.c:32]   --->   Operation 362 'load' 'data_load_50' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_24 : Operation 363 [1/1] (0.00ns) (grouped into LUT with out node add_ln48_1)   --->   "%and_ln48 = and i32 %a_5, i32 %b_3" [md5.c:48]   --->   Operation 363 'and' 'and_ln48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node add_ln48_1)   --->   "%xor_ln48 = xor i32 %a_5, i32 4294967295" [md5.c:48]   --->   Operation 364 'xor' 'xor_ln48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node add_ln48_1)   --->   "%and_ln48_1 = and i32 %c_3, i32 %xor_ln48" [md5.c:48]   --->   Operation 365 'and' 'and_ln48_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node add_ln48_1)   --->   "%or_ln48 = or i32 %and_ln48, i32 %and_ln48_1" [md5.c:48]   --->   Operation 366 'or' 'or_ln48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 367 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln48 = add i32 %d_3, i32 2336552879" [md5.c:48]   --->   Operation 367 'add' 'add_ln48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 368 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln48_1 = add i32 %or_ln32_5_9, i32 %or_ln48" [md5.c:48]   --->   Operation 368 'add' 'add_ln48_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 369 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_4 = add i32 %add_ln48_1, i32 %add_ln48" [md5.c:48]   --->   Operation 369 'add' 'd_4' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 370 [1/1] (0.00ns)   --->   "%trunc_ln48 = trunc i32 %d_4" [md5.c:48]   --->   Operation 370 'trunc' 'trunc_ln48' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 371 [1/1] (0.00ns)   --->   "%lshr_ln9 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %d_4, i32 20, i32 31" [md5.c:48]   --->   Operation 371 'partselect' 'lshr_ln9' <Predicate = true> <Delay = 0.00>

State 25 <SV = 24> <Delay = 5.10>
ST_25 : Operation 372 [1/2] (2.32ns)   --->   "%data_load_49 = load i6 %data_addr_50" [md5.c:32]   --->   Operation 372 'load' 'data_load_49' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_25 : Operation 373 [1/2] (2.32ns)   --->   "%data_load_50 = load i6 %data_addr_51" [md5.c:32]   --->   Operation 373 'load' 'data_load_50' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_25 : Operation 374 [1/1] (0.00ns)   --->   "%data_addr_12 = getelementptr i8 %data, i64 0, i64 48" [md5.c:32]   --->   Operation 374 'getelementptr' 'data_addr_12' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 375 [2/2] (2.32ns)   --->   "%data_load_51 = load i6 %data_addr_12" [md5.c:32]   --->   Operation 375 'load' 'data_load_51' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_25 : Operation 376 [1/1] (0.00ns)   --->   "%data_addr_52 = getelementptr i8 %data, i64 0, i64 49" [md5.c:32]   --->   Operation 376 'getelementptr' 'data_addr_52' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 377 [2/2] (2.32ns)   --->   "%data_load_52 = load i6 %data_addr_52" [md5.c:32]   --->   Operation 377 'load' 'data_load_52' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_25 : Operation 378 [1/1] (0.00ns)   --->   "%or_ln48_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %trunc_ln48, i12 %lshr_ln9" [md5.c:48]   --->   Operation 378 'bitconcatenate' 'or_ln48_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 379 [1/1] (2.55ns)   --->   "%d_5 = add i32 %or_ln48_1, i32 %a_5" [md5.c:48]   --->   Operation 379 'add' 'd_5' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_1)   --->   "%and_ln49 = and i32 %d_5, i32 %a_5" [md5.c:49]   --->   Operation 380 'and' 'and_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_1)   --->   "%xor_ln49 = xor i32 %d_5, i32 4294967295" [md5.c:49]   --->   Operation 381 'xor' 'xor_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_1)   --->   "%and_ln49_1 = and i32 %b_3, i32 %xor_ln49" [md5.c:49]   --->   Operation 382 'and' 'and_ln49_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 383 [1/1] (0.00ns) (grouped into LUT with out node add_ln49_1)   --->   "%or_ln49 = or i32 %and_ln49, i32 %and_ln49_1" [md5.c:49]   --->   Operation 383 'or' 'or_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 384 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln49_1 = add i32 %or_ln49, i32 4294925233" [md5.c:49]   --->   Operation 384 'add' 'add_ln49_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.92>
ST_26 : Operation 385 [1/1] (0.00ns)   --->   "%or_ln32_5_s = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_47, i8 %data_load_46, i8 %data_load_45, i8 %data_load_10" [md5.c:32]   --->   Operation 385 'bitconcatenate' 'or_ln32_5_s' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 386 [1/2] (2.32ns)   --->   "%data_load_51 = load i6 %data_addr_12" [md5.c:32]   --->   Operation 386 'load' 'data_load_51' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_26 : Operation 387 [1/2] (2.32ns)   --->   "%data_load_52 = load i6 %data_addr_52" [md5.c:32]   --->   Operation 387 'load' 'data_load_52' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_26 : Operation 388 [1/1] (0.00ns)   --->   "%data_addr_53 = getelementptr i8 %data, i64 0, i64 50" [md5.c:32]   --->   Operation 388 'getelementptr' 'data_addr_53' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 389 [2/2] (2.32ns)   --->   "%data_load_53 = load i6 %data_addr_53" [md5.c:32]   --->   Operation 389 'load' 'data_load_53' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_26 : Operation 390 [1/1] (0.00ns)   --->   "%data_addr_54 = getelementptr i8 %data, i64 0, i64 51" [md5.c:32]   --->   Operation 390 'getelementptr' 'data_addr_54' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 391 [2/2] (2.32ns)   --->   "%data_load_54 = load i6 %data_addr_54" [md5.c:32]   --->   Operation 391 'load' 'data_load_54' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_26 : Operation 392 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln49 = add i32 %c_3, i32 %or_ln32_5_s" [md5.c:49]   --->   Operation 392 'add' 'add_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 393 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_4 = add i32 %add_ln49_1, i32 %add_ln49" [md5.c:49]   --->   Operation 393 'add' 'c_4' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 394 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i32 %c_4" [md5.c:49]   --->   Operation 394 'trunc' 'trunc_ln49' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 395 [1/1] (0.00ns)   --->   "%lshr_ln10 = partselect i17 @_ssdm_op_PartSelect.i17.i32.i32.i32, i32 %c_4, i32 15, i32 31" [md5.c:49]   --->   Operation 395 'partselect' 'lshr_ln10' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 396 [1/1] (0.00ns)   --->   "%or_ln49_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i15.i17, i15 %trunc_ln49, i17 %lshr_ln10" [md5.c:49]   --->   Operation 396 'bitconcatenate' 'or_ln49_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 397 [1/1] (2.55ns)   --->   "%c_5 = add i32 %or_ln49_1, i32 %d_5" [md5.c:49]   --->   Operation 397 'add' 'c_5' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 6.92>
ST_27 : Operation 398 [1/1] (0.00ns)   --->   "%or_ln32_5_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_50, i8 %data_load_49, i8 %data_load_48, i8 %data_load_11" [md5.c:32]   --->   Operation 398 'bitconcatenate' 'or_ln32_5_10' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 399 [1/2] (2.32ns)   --->   "%data_load_53 = load i6 %data_addr_53" [md5.c:32]   --->   Operation 399 'load' 'data_load_53' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_27 : Operation 400 [1/2] (2.32ns)   --->   "%data_load_54 = load i6 %data_addr_54" [md5.c:32]   --->   Operation 400 'load' 'data_load_54' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_27 : Operation 401 [1/1] (0.00ns)   --->   "%data_addr_13 = getelementptr i8 %data, i64 0, i64 52" [md5.c:32]   --->   Operation 401 'getelementptr' 'data_addr_13' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 402 [2/2] (2.32ns)   --->   "%data_load_13 = load i6 %data_addr_13" [md5.c:32]   --->   Operation 402 'load' 'data_load_13' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_27 : Operation 403 [1/1] (0.00ns)   --->   "%data_addr_55 = getelementptr i8 %data, i64 0, i64 53" [md5.c:32]   --->   Operation 403 'getelementptr' 'data_addr_55' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 404 [2/2] (2.32ns)   --->   "%data_load_55 = load i6 %data_addr_55" [md5.c:32]   --->   Operation 404 'load' 'data_load_55' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_27 : Operation 405 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_1)   --->   "%and_ln50 = and i32 %c_5, i32 %d_5" [md5.c:50]   --->   Operation 405 'and' 'and_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 406 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_1)   --->   "%xor_ln50 = xor i32 %c_5, i32 4294967295" [md5.c:50]   --->   Operation 406 'xor' 'xor_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_1)   --->   "%and_ln50_1 = and i32 %a_5, i32 %xor_ln50" [md5.c:50]   --->   Operation 407 'and' 'and_ln50_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 408 [1/1] (0.00ns) (grouped into LUT with out node add_ln50_1)   --->   "%or_ln50 = or i32 %and_ln50, i32 %and_ln50_1" [md5.c:50]   --->   Operation 408 'or' 'or_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 409 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln50 = add i32 %b_3, i32 2304563134" [md5.c:50]   --->   Operation 409 'add' 'add_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 410 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln50_1 = add i32 %or_ln32_5_10, i32 %or_ln50" [md5.c:50]   --->   Operation 410 'add' 'add_ln50_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 411 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_4 = add i32 %add_ln50_1, i32 %add_ln50" [md5.c:50]   --->   Operation 411 'add' 'b_4' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 412 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i32 %b_4" [md5.c:50]   --->   Operation 412 'trunc' 'trunc_ln50' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 413 [1/1] (0.00ns)   --->   "%lshr_ln11 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %b_4, i32 10, i32 31" [md5.c:50]   --->   Operation 413 'partselect' 'lshr_ln11' <Predicate = true> <Delay = 0.00>

State 28 <SV = 27> <Delay = 5.10>
ST_28 : Operation 414 [1/2] (2.32ns)   --->   "%data_load_13 = load i6 %data_addr_13" [md5.c:32]   --->   Operation 414 'load' 'data_load_13' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_28 : Operation 415 [1/2] (2.32ns)   --->   "%data_load_55 = load i6 %data_addr_55" [md5.c:32]   --->   Operation 415 'load' 'data_load_55' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_28 : Operation 416 [1/1] (0.00ns)   --->   "%data_addr_56 = getelementptr i8 %data, i64 0, i64 54" [md5.c:32]   --->   Operation 416 'getelementptr' 'data_addr_56' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 417 [2/2] (2.32ns)   --->   "%data_load_56 = load i6 %data_addr_56" [md5.c:32]   --->   Operation 417 'load' 'data_load_56' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_28 : Operation 418 [1/1] (0.00ns)   --->   "%data_addr_57 = getelementptr i8 %data, i64 0, i64 55" [md5.c:32]   --->   Operation 418 'getelementptr' 'data_addr_57' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 419 [2/2] (2.32ns)   --->   "%data_load_57 = load i6 %data_addr_57" [md5.c:32]   --->   Operation 419 'load' 'data_load_57' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_28 : Operation 420 [1/1] (0.00ns)   --->   "%or_ln50_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i10.i22, i10 %trunc_ln50, i22 %lshr_ln11" [md5.c:50]   --->   Operation 420 'bitconcatenate' 'or_ln50_1' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 421 [1/1] (2.55ns)   --->   "%b_5 = add i32 %or_ln50_1, i32 %c_5" [md5.c:50]   --->   Operation 421 'add' 'b_5' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 422 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%and_ln51 = and i32 %b_5, i32 %c_5" [md5.c:51]   --->   Operation 422 'and' 'and_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 423 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%xor_ln51 = xor i32 %b_5, i32 4294967295" [md5.c:51]   --->   Operation 423 'xor' 'xor_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%and_ln51_1 = and i32 %d_5, i32 %xor_ln51" [md5.c:51]   --->   Operation 424 'and' 'and_ln51_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 425 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%or_ln51 = or i32 %and_ln51, i32 %and_ln51_1" [md5.c:51]   --->   Operation 425 'or' 'or_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 426 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln51_1 = add i32 %or_ln51, i32 1804603682" [md5.c:51]   --->   Operation 426 'add' 'add_ln51_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 6.92>
ST_29 : Operation 427 [1/1] (0.00ns)   --->   "%or_ln32_5_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_54, i8 %data_load_53, i8 %data_load_52, i8 %data_load_51" [md5.c:32]   --->   Operation 427 'bitconcatenate' 'or_ln32_5_11' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 428 [1/2] (2.32ns)   --->   "%data_load_56 = load i6 %data_addr_56" [md5.c:32]   --->   Operation 428 'load' 'data_load_56' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_29 : Operation 429 [1/2] (2.32ns)   --->   "%data_load_57 = load i6 %data_addr_57" [md5.c:32]   --->   Operation 429 'load' 'data_load_57' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_29 : Operation 430 [1/1] (0.00ns)   --->   "%data_addr_14 = getelementptr i8 %data, i64 0, i64 56" [md5.c:32]   --->   Operation 430 'getelementptr' 'data_addr_14' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 431 [2/2] (2.32ns)   --->   "%data_load_14 = load i6 %data_addr_14" [md5.c:32]   --->   Operation 431 'load' 'data_load_14' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_29 : Operation 432 [1/1] (0.00ns)   --->   "%data_addr_58 = getelementptr i8 %data, i64 0, i64 57" [md5.c:32]   --->   Operation 432 'getelementptr' 'data_addr_58' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 433 [2/2] (2.32ns)   --->   "%data_load_58 = load i6 %data_addr_58" [md5.c:32]   --->   Operation 433 'load' 'data_load_58' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_29 : Operation 434 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51 = add i32 %a_5, i32 %or_ln32_5_11" [md5.c:51]   --->   Operation 434 'add' 'add_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 435 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_6 = add i32 %add_ln51_1, i32 %add_ln51" [md5.c:51]   --->   Operation 435 'add' 'a_6' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 436 [1/1] (0.00ns)   --->   "%trunc_ln51 = trunc i32 %a_6" [md5.c:51]   --->   Operation 436 'trunc' 'trunc_ln51' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 437 [1/1] (0.00ns)   --->   "%lshr_ln12 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %a_6, i32 25, i32 31" [md5.c:51]   --->   Operation 437 'partselect' 'lshr_ln12' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 438 [1/1] (0.00ns)   --->   "%or_ln51_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln51, i7 %lshr_ln12" [md5.c:51]   --->   Operation 438 'bitconcatenate' 'or_ln51_1' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 439 [1/1] (2.55ns)   --->   "%a_7 = add i32 %or_ln51_1, i32 %b_5" [md5.c:51]   --->   Operation 439 'add' 'a_7' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 6.92>
ST_30 : Operation 440 [1/1] (0.00ns)   --->   "%or_ln32_5_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_57, i8 %data_load_56, i8 %data_load_55, i8 %data_load_13" [md5.c:32]   --->   Operation 440 'bitconcatenate' 'or_ln32_5_12' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 441 [1/2] (2.32ns)   --->   "%data_load_14 = load i6 %data_addr_14" [md5.c:32]   --->   Operation 441 'load' 'data_load_14' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_30 : Operation 442 [1/2] (2.32ns)   --->   "%data_load_58 = load i6 %data_addr_58" [md5.c:32]   --->   Operation 442 'load' 'data_load_58' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_30 : Operation 443 [1/1] (0.00ns)   --->   "%data_addr_59 = getelementptr i8 %data, i64 0, i64 58" [md5.c:32]   --->   Operation 443 'getelementptr' 'data_addr_59' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 444 [2/2] (2.32ns)   --->   "%data_load_59 = load i6 %data_addr_59" [md5.c:32]   --->   Operation 444 'load' 'data_load_59' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_30 : Operation 445 [1/1] (0.00ns)   --->   "%data_addr_60 = getelementptr i8 %data, i64 0, i64 59" [md5.c:32]   --->   Operation 445 'getelementptr' 'data_addr_60' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 446 [2/2] (2.32ns)   --->   "%data_load_60 = load i6 %data_addr_60" [md5.c:32]   --->   Operation 446 'load' 'data_load_60' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_30 : Operation 447 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_1)   --->   "%and_ln52 = and i32 %a_7, i32 %b_5" [md5.c:52]   --->   Operation 447 'and' 'and_ln52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 448 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_1)   --->   "%xor_ln52 = xor i32 %a_7, i32 4294967295" [md5.c:52]   --->   Operation 448 'xor' 'xor_ln52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_1)   --->   "%and_ln52_1 = and i32 %c_5, i32 %xor_ln52" [md5.c:52]   --->   Operation 449 'and' 'and_ln52_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 450 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_1)   --->   "%or_ln52 = or i32 %and_ln52, i32 %and_ln52_1" [md5.c:52]   --->   Operation 450 'or' 'or_ln52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 451 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52 = add i32 %d_5, i32 %or_ln32_5_12" [md5.c:52]   --->   Operation 451 'add' 'add_ln52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 452 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln52_1 = add i32 %or_ln52, i32 4254626195" [md5.c:52]   --->   Operation 452 'add' 'add_ln52_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 453 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_6 = add i32 %add_ln52_1, i32 %add_ln52" [md5.c:52]   --->   Operation 453 'add' 'd_6' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 454 [1/1] (0.00ns)   --->   "%trunc_ln52 = trunc i32 %d_6" [md5.c:52]   --->   Operation 454 'trunc' 'trunc_ln52' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 455 [1/1] (0.00ns)   --->   "%lshr_ln13 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %d_6, i32 20, i32 31" [md5.c:52]   --->   Operation 455 'partselect' 'lshr_ln13' <Predicate = true> <Delay = 0.00>

State 31 <SV = 30> <Delay = 3.54>
ST_31 : Operation 456 [1/2] (2.32ns)   --->   "%data_load_59 = load i6 %data_addr_59" [md5.c:32]   --->   Operation 456 'load' 'data_load_59' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_31 : Operation 457 [1/2] (2.32ns)   --->   "%data_load_60 = load i6 %data_addr_60" [md5.c:32]   --->   Operation 457 'load' 'data_load_60' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_31 : Operation 458 [1/1] (0.00ns)   --->   "%data_addr_15 = getelementptr i8 %data, i64 0, i64 60" [md5.c:32]   --->   Operation 458 'getelementptr' 'data_addr_15' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 459 [2/2] (2.32ns)   --->   "%data_load_15 = load i6 %data_addr_15" [md5.c:32]   --->   Operation 459 'load' 'data_load_15' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_31 : Operation 460 [1/1] (0.00ns)   --->   "%data_addr_61 = getelementptr i8 %data, i64 0, i64 61" [md5.c:32]   --->   Operation 460 'getelementptr' 'data_addr_61' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 461 [2/2] (2.32ns)   --->   "%data_load_61 = load i6 %data_addr_61" [md5.c:32]   --->   Operation 461 'load' 'data_load_61' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_31 : Operation 462 [1/1] (0.00ns)   --->   "%or_ln52_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %trunc_ln52, i12 %lshr_ln13" [md5.c:52]   --->   Operation 462 'bitconcatenate' 'or_ln52_1' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 463 [1/1] (2.55ns)   --->   "%d_7 = add i32 %or_ln52_1, i32 %a_7" [md5.c:52]   --->   Operation 463 'add' 'd_7' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 464 [1/1] (0.99ns)   --->   "%xor_ln53 = xor i32 %d_7, i32 4294967295" [md5.c:53]   --->   Operation 464 'xor' 'xor_ln53' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 6.92>
ST_32 : Operation 465 [1/1] (0.00ns)   --->   "%or_ln32_5_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_60, i8 %data_load_59, i8 %data_load_58, i8 %data_load_14" [md5.c:32]   --->   Operation 465 'bitconcatenate' 'or_ln32_5_13' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 466 [1/2] (2.32ns)   --->   "%data_load_15 = load i6 %data_addr_15" [md5.c:32]   --->   Operation 466 'load' 'data_load_15' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_32 : Operation 467 [1/2] (2.32ns)   --->   "%data_load_61 = load i6 %data_addr_61" [md5.c:32]   --->   Operation 467 'load' 'data_load_61' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_32 : Operation 468 [1/1] (0.00ns)   --->   "%data_addr_62 = getelementptr i8 %data, i64 0, i64 62" [md5.c:32]   --->   Operation 468 'getelementptr' 'data_addr_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 469 [2/2] (2.32ns)   --->   "%data_load_62 = load i6 %data_addr_62" [md5.c:32]   --->   Operation 469 'load' 'data_load_62' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_32 : Operation 470 [1/1] (0.00ns)   --->   "%data_addr_63 = getelementptr i8 %data, i64 0, i64 63" [md5.c:32]   --->   Operation 470 'getelementptr' 'data_addr_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 471 [2/2] (2.32ns)   --->   "%data_load_63 = load i6 %data_addr_63" [md5.c:32]   --->   Operation 471 'load' 'data_load_63' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_32 : Operation 472 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_1)   --->   "%and_ln53 = and i32 %d_7, i32 %a_7" [md5.c:53]   --->   Operation 472 'and' 'and_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 473 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_1)   --->   "%and_ln53_1 = and i32 %b_5, i32 %xor_ln53" [md5.c:53]   --->   Operation 473 'and' 'and_ln53_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 474 [1/1] (0.00ns) (grouped into LUT with out node add_ln53_1)   --->   "%or_ln53 = or i32 %and_ln53, i32 %and_ln53_1" [md5.c:53]   --->   Operation 474 'or' 'or_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 475 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln53 = add i32 %c_5, i32 2792965006" [md5.c:53]   --->   Operation 475 'add' 'add_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 476 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln53_1 = add i32 %or_ln32_5_13, i32 %or_ln53" [md5.c:53]   --->   Operation 476 'add' 'add_ln53_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 477 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_6 = add i32 %add_ln53_1, i32 %add_ln53" [md5.c:53]   --->   Operation 477 'add' 'c_6' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 478 [1/1] (0.00ns)   --->   "%trunc_ln53 = trunc i32 %c_6" [md5.c:53]   --->   Operation 478 'trunc' 'trunc_ln53' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 479 [1/1] (0.00ns)   --->   "%lshr_ln14 = partselect i17 @_ssdm_op_PartSelect.i17.i32.i32.i32, i32 %c_6, i32 15, i32 31" [md5.c:53]   --->   Operation 479 'partselect' 'lshr_ln14' <Predicate = true> <Delay = 0.00>

State 33 <SV = 32> <Delay = 6.09>
ST_33 : Operation 480 [1/2] (2.32ns)   --->   "%data_load_62 = load i6 %data_addr_62" [md5.c:32]   --->   Operation 480 'load' 'data_load_62' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_33 : Operation 481 [1/2] (2.32ns)   --->   "%data_load_63 = load i6 %data_addr_63" [md5.c:32]   --->   Operation 481 'load' 'data_load_63' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_33 : Operation 482 [1/1] (0.00ns)   --->   "%or_ln53_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i15.i17, i15 %trunc_ln53, i17 %lshr_ln14" [md5.c:53]   --->   Operation 482 'bitconcatenate' 'or_ln53_1' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 483 [1/1] (2.55ns)   --->   "%c_7 = add i32 %or_ln53_1, i32 %d_7" [md5.c:53]   --->   Operation 483 'add' 'c_7' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 484 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_1)   --->   "%and_ln54 = and i32 %c_7, i32 %d_7" [md5.c:54]   --->   Operation 484 'and' 'and_ln54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 485 [1/1] (0.99ns)   --->   "%xor_ln54 = xor i32 %c_7, i32 4294967295" [md5.c:54]   --->   Operation 485 'xor' 'xor_ln54' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 486 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_1)   --->   "%and_ln54_1 = and i32 %a_7, i32 %xor_ln54" [md5.c:54]   --->   Operation 486 'and' 'and_ln54_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 487 [1/1] (0.00ns) (grouped into LUT with out node add_ln54_1)   --->   "%or_ln54 = or i32 %and_ln54, i32 %and_ln54_1" [md5.c:54]   --->   Operation 487 'or' 'or_ln54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 488 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln54_1 = add i32 %or_ln54, i32 1236535329" [md5.c:54]   --->   Operation 488 'add' 'add_ln54_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 6.92>
ST_34 : Operation 489 [1/1] (0.00ns)   --->   "%or_ln32_5_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load_63, i8 %data_load_62, i8 %data_load_61, i8 %data_load_15" [md5.c:32]   --->   Operation 489 'bitconcatenate' 'or_ln32_5_14' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 490 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54 = add i32 %b_5, i32 %or_ln32_5_14" [md5.c:54]   --->   Operation 490 'add' 'add_ln54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 491 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_6 = add i32 %add_ln54_1, i32 %add_ln54" [md5.c:54]   --->   Operation 491 'add' 'b_6' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 492 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i32 %b_6" [md5.c:54]   --->   Operation 492 'trunc' 'trunc_ln54' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 493 [1/1] (0.00ns)   --->   "%lshr_ln15 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %b_6, i32 10, i32 31" [md5.c:54]   --->   Operation 493 'partselect' 'lshr_ln15' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 494 [1/1] (0.00ns)   --->   "%or_ln54_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i10.i22, i10 %trunc_ln54, i22 %lshr_ln15" [md5.c:54]   --->   Operation 494 'bitconcatenate' 'or_ln54_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 495 [1/1] (2.55ns)   --->   "%b_7 = add i32 %or_ln54_1, i32 %c_7" [md5.c:54]   --->   Operation 495 'add' 'b_7' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 6.92>
ST_35 : Operation 496 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_1)   --->   "%and_ln56 = and i32 %b_7, i32 %d_7" [md5.c:56]   --->   Operation 496 'and' 'and_ln56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 497 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_1)   --->   "%and_ln56_1 = and i32 %c_7, i32 %xor_ln53" [md5.c:56]   --->   Operation 497 'and' 'and_ln56_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 498 [1/1] (0.00ns) (grouped into LUT with out node add_ln56_1)   --->   "%or_ln56 = or i32 %and_ln56, i32 %and_ln56_1" [md5.c:56]   --->   Operation 498 'or' 'or_ln56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 499 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln56 = add i32 %a_7, i32 %or_ln32_5_1" [md5.c:56]   --->   Operation 499 'add' 'add_ln56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 500 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln56_1 = add i32 %or_ln56, i32 4129170786" [md5.c:56]   --->   Operation 500 'add' 'add_ln56_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 501 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_8 = add i32 %add_ln56_1, i32 %add_ln56" [md5.c:56]   --->   Operation 501 'add' 'a_8' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 502 [1/1] (0.00ns)   --->   "%trunc_ln56 = trunc i32 %a_8" [md5.c:56]   --->   Operation 502 'trunc' 'trunc_ln56' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 503 [1/1] (0.00ns)   --->   "%lshr_ln16 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %a_8, i32 27, i32 31" [md5.c:56]   --->   Operation 503 'partselect' 'lshr_ln16' <Predicate = true> <Delay = 0.00>

State 36 <SV = 35> <Delay = 5.10>
ST_36 : Operation 504 [1/1] (0.00ns)   --->   "%or_ln56_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i27.i5, i27 %trunc_ln56, i5 %lshr_ln16" [md5.c:56]   --->   Operation 504 'bitconcatenate' 'or_ln56_1' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 505 [1/1] (2.55ns)   --->   "%a_9 = add i32 %or_ln56_1, i32 %b_7" [md5.c:56]   --->   Operation 505 'add' 'a_9' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 506 [1/1] (0.00ns) (grouped into LUT with out node add_ln57_1)   --->   "%and_ln57 = and i32 %a_9, i32 %c_7" [md5.c:57]   --->   Operation 506 'and' 'and_ln57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 507 [1/1] (0.00ns) (grouped into LUT with out node add_ln57_1)   --->   "%and_ln57_1 = and i32 %b_7, i32 %xor_ln54" [md5.c:57]   --->   Operation 507 'and' 'and_ln57_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 508 [1/1] (0.00ns) (grouped into LUT with out node add_ln57_1)   --->   "%or_ln57 = or i32 %and_ln57, i32 %and_ln57_1" [md5.c:57]   --->   Operation 508 'or' 'or_ln57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 509 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln57_1 = add i32 %or_ln57, i32 3225465664" [md5.c:57]   --->   Operation 509 'add' 'add_ln57_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 6.92>
ST_37 : Operation 510 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln57 = add i32 %d_7, i32 %or_ln32_5_6" [md5.c:57]   --->   Operation 510 'add' 'add_ln57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 511 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_8 = add i32 %add_ln57_1, i32 %add_ln57" [md5.c:57]   --->   Operation 511 'add' 'd_8' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 512 [1/1] (0.00ns)   --->   "%trunc_ln57 = trunc i32 %d_8" [md5.c:57]   --->   Operation 512 'trunc' 'trunc_ln57' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 513 [1/1] (0.00ns)   --->   "%lshr_ln17 = partselect i9 @_ssdm_op_PartSelect.i9.i32.i32.i32, i32 %d_8, i32 23, i32 31" [md5.c:57]   --->   Operation 513 'partselect' 'lshr_ln17' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 514 [1/1] (0.00ns)   --->   "%or_ln57_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %trunc_ln57, i9 %lshr_ln17" [md5.c:57]   --->   Operation 514 'bitconcatenate' 'or_ln57_1' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 515 [1/1] (2.55ns)   --->   "%d_9 = add i32 %or_ln57_1, i32 %a_9" [md5.c:57]   --->   Operation 515 'add' 'd_9' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 6.92>
ST_38 : Operation 516 [1/1] (0.00ns) (grouped into LUT with out node add_ln58_1)   --->   "%and_ln58 = and i32 %d_9, i32 %b_7" [md5.c:58]   --->   Operation 516 'and' 'and_ln58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 517 [1/1] (0.00ns) (grouped into LUT with out node add_ln58_1)   --->   "%xor_ln58 = xor i32 %b_7, i32 4294967295" [md5.c:58]   --->   Operation 517 'xor' 'xor_ln58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 518 [1/1] (0.00ns) (grouped into LUT with out node add_ln58_1)   --->   "%and_ln58_1 = and i32 %a_9, i32 %xor_ln58" [md5.c:58]   --->   Operation 518 'and' 'and_ln58_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 519 [1/1] (0.00ns) (grouped into LUT with out node add_ln58_1)   --->   "%or_ln58 = or i32 %and_ln58, i32 %and_ln58_1" [md5.c:58]   --->   Operation 519 'or' 'or_ln58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 520 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln58 = add i32 %c_7, i32 %or_ln32_5_10" [md5.c:58]   --->   Operation 520 'add' 'add_ln58' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 521 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln58_1 = add i32 %or_ln58, i32 643717713" [md5.c:58]   --->   Operation 521 'add' 'add_ln58_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 522 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_8 = add i32 %add_ln58_1, i32 %add_ln58" [md5.c:58]   --->   Operation 522 'add' 'c_8' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 523 [1/1] (0.00ns)   --->   "%trunc_ln58 = trunc i32 %c_8" [md5.c:58]   --->   Operation 523 'trunc' 'trunc_ln58' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 524 [1/1] (0.00ns)   --->   "%lshr_ln18 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %c_8, i32 18, i32 31" [md5.c:58]   --->   Operation 524 'partselect' 'lshr_ln18' <Predicate = true> <Delay = 0.00>

State 39 <SV = 38> <Delay = 5.10>
ST_39 : Operation 525 [1/1] (0.00ns)   --->   "%or_ln58_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln58, i14 %lshr_ln18" [md5.c:58]   --->   Operation 525 'bitconcatenate' 'or_ln58_1' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 526 [1/1] (2.55ns)   --->   "%c_9 = add i32 %or_ln58_1, i32 %d_9" [md5.c:58]   --->   Operation 526 'add' 'c_9' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 527 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_1)   --->   "%and_ln59 = and i32 %c_9, i32 %a_9" [md5.c:59]   --->   Operation 527 'and' 'and_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 528 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_1)   --->   "%xor_ln59 = xor i32 %a_9, i32 4294967295" [md5.c:59]   --->   Operation 528 'xor' 'xor_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 529 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_1)   --->   "%and_ln59_1 = and i32 %d_9, i32 %xor_ln59" [md5.c:59]   --->   Operation 529 'and' 'and_ln59_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 530 [1/1] (0.00ns) (grouped into LUT with out node add_ln59_1)   --->   "%or_ln59 = or i32 %and_ln59, i32 %and_ln59_1" [md5.c:59]   --->   Operation 530 'or' 'or_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 531 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln59_1 = add i32 %or_ln59, i32 3921069994" [md5.c:59]   --->   Operation 531 'add' 'add_ln59_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 6.92>
ST_40 : Operation 532 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln59 = add i32 %b_7, i32 %or_ln32_5" [md5.c:59]   --->   Operation 532 'add' 'add_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 533 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_8 = add i32 %add_ln59_1, i32 %add_ln59" [md5.c:59]   --->   Operation 533 'add' 'b_8' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 534 [1/1] (0.00ns)   --->   "%trunc_ln59 = trunc i32 %b_8" [md5.c:59]   --->   Operation 534 'trunc' 'trunc_ln59' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 535 [1/1] (0.00ns)   --->   "%lshr_ln19 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %b_8, i32 12, i32 31" [md5.c:59]   --->   Operation 535 'partselect' 'lshr_ln19' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 536 [1/1] (0.00ns)   --->   "%or_ln59_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i12.i20, i12 %trunc_ln59, i20 %lshr_ln19" [md5.c:59]   --->   Operation 536 'bitconcatenate' 'or_ln59_1' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 537 [1/1] (2.55ns)   --->   "%b_9 = add i32 %or_ln59_1, i32 %c_9" [md5.c:59]   --->   Operation 537 'add' 'b_9' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 6.92>
ST_41 : Operation 538 [1/1] (0.00ns) (grouped into LUT with out node add_ln60_1)   --->   "%and_ln60 = and i32 %b_9, i32 %d_9" [md5.c:60]   --->   Operation 538 'and' 'and_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 539 [1/1] (0.00ns) (grouped into LUT with out node add_ln60_1)   --->   "%xor_ln60 = xor i32 %d_9, i32 4294967295" [md5.c:60]   --->   Operation 539 'xor' 'xor_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 540 [1/1] (0.00ns) (grouped into LUT with out node add_ln60_1)   --->   "%and_ln60_1 = and i32 %c_9, i32 %xor_ln60" [md5.c:60]   --->   Operation 540 'and' 'and_ln60_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 541 [1/1] (0.00ns) (grouped into LUT with out node add_ln60_1)   --->   "%or_ln60 = or i32 %and_ln60, i32 %and_ln60_1" [md5.c:60]   --->   Operation 541 'or' 'or_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 542 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln60 = add i32 %a_9, i32 %or_ln32_5_5" [md5.c:60]   --->   Operation 542 'add' 'add_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_41 : Operation 543 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln60_1 = add i32 %or_ln60, i32 3593408605" [md5.c:60]   --->   Operation 543 'add' 'add_ln60_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 544 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_10 = add i32 %add_ln60_1, i32 %add_ln60" [md5.c:60]   --->   Operation 544 'add' 'a_10' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_41 : Operation 545 [1/1] (0.00ns)   --->   "%trunc_ln60 = trunc i32 %a_10" [md5.c:60]   --->   Operation 545 'trunc' 'trunc_ln60' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 546 [1/1] (0.00ns)   --->   "%lshr_ln20 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %a_10, i32 27, i32 31" [md5.c:60]   --->   Operation 546 'partselect' 'lshr_ln20' <Predicate = true> <Delay = 0.00>

State 42 <SV = 41> <Delay = 5.10>
ST_42 : Operation 547 [1/1] (0.00ns)   --->   "%or_ln60_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i27.i5, i27 %trunc_ln60, i5 %lshr_ln20" [md5.c:60]   --->   Operation 547 'bitconcatenate' 'or_ln60_1' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 548 [1/1] (2.55ns)   --->   "%a_11 = add i32 %or_ln60_1, i32 %b_9" [md5.c:60]   --->   Operation 548 'add' 'a_11' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 549 [1/1] (0.00ns) (grouped into LUT with out node add_ln61_1)   --->   "%and_ln61 = and i32 %a_11, i32 %c_9" [md5.c:61]   --->   Operation 549 'and' 'and_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 550 [1/1] (0.00ns) (grouped into LUT with out node add_ln61_1)   --->   "%xor_ln61 = xor i32 %c_9, i32 4294967295" [md5.c:61]   --->   Operation 550 'xor' 'xor_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 551 [1/1] (0.00ns) (grouped into LUT with out node add_ln61_1)   --->   "%and_ln61_1 = and i32 %b_9, i32 %xor_ln61" [md5.c:61]   --->   Operation 551 'and' 'and_ln61_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 552 [1/1] (0.00ns) (grouped into LUT with out node add_ln61_1)   --->   "%or_ln61 = or i32 %and_ln61, i32 %and_ln61_1" [md5.c:61]   --->   Operation 552 'or' 'or_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 553 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln61_1 = add i32 %or_ln61, i32 38016083" [md5.c:61]   --->   Operation 553 'add' 'add_ln61_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 6.92>
ST_43 : Operation 554 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln61 = add i32 %d_9, i32 %or_ln32_5_s" [md5.c:61]   --->   Operation 554 'add' 'add_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_43 : Operation 555 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_10 = add i32 %add_ln61_1, i32 %add_ln61" [md5.c:61]   --->   Operation 555 'add' 'd_10' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_43 : Operation 556 [1/1] (0.00ns)   --->   "%trunc_ln61 = trunc i32 %d_10" [md5.c:61]   --->   Operation 556 'trunc' 'trunc_ln61' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 557 [1/1] (0.00ns)   --->   "%lshr_ln21 = partselect i9 @_ssdm_op_PartSelect.i9.i32.i32.i32, i32 %d_10, i32 23, i32 31" [md5.c:61]   --->   Operation 557 'partselect' 'lshr_ln21' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 558 [1/1] (0.00ns)   --->   "%or_ln61_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %trunc_ln61, i9 %lshr_ln21" [md5.c:61]   --->   Operation 558 'bitconcatenate' 'or_ln61_1' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 559 [1/1] (2.55ns)   --->   "%d_11 = add i32 %or_ln61_1, i32 %a_11" [md5.c:61]   --->   Operation 559 'add' 'd_11' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 6.92>
ST_44 : Operation 560 [1/1] (0.00ns) (grouped into LUT with out node add_ln62_1)   --->   "%and_ln62 = and i32 %d_11, i32 %b_9" [md5.c:62]   --->   Operation 560 'and' 'and_ln62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 561 [1/1] (0.00ns) (grouped into LUT with out node add_ln62_1)   --->   "%xor_ln62 = xor i32 %b_9, i32 4294967295" [md5.c:62]   --->   Operation 561 'xor' 'xor_ln62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 562 [1/1] (0.00ns) (grouped into LUT with out node add_ln62_1)   --->   "%and_ln62_1 = and i32 %a_11, i32 %xor_ln62" [md5.c:62]   --->   Operation 562 'and' 'and_ln62_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 563 [1/1] (0.00ns) (grouped into LUT with out node add_ln62_1)   --->   "%or_ln62 = or i32 %and_ln62, i32 %and_ln62_1" [md5.c:62]   --->   Operation 563 'or' 'or_ln62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 564 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln62 = add i32 %c_9, i32 %or_ln32_5_14" [md5.c:62]   --->   Operation 564 'add' 'add_ln62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_44 : Operation 565 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln62_1 = add i32 %or_ln62, i32 3634488961" [md5.c:62]   --->   Operation 565 'add' 'add_ln62_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 566 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_10 = add i32 %add_ln62_1, i32 %add_ln62" [md5.c:62]   --->   Operation 566 'add' 'c_10' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_44 : Operation 567 [1/1] (0.00ns)   --->   "%trunc_ln62 = trunc i32 %c_10" [md5.c:62]   --->   Operation 567 'trunc' 'trunc_ln62' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 568 [1/1] (0.00ns)   --->   "%lshr_ln22 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %c_10, i32 18, i32 31" [md5.c:62]   --->   Operation 568 'partselect' 'lshr_ln22' <Predicate = true> <Delay = 0.00>

State 45 <SV = 44> <Delay = 5.10>
ST_45 : Operation 569 [1/1] (0.00ns)   --->   "%or_ln62_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln62, i14 %lshr_ln22" [md5.c:62]   --->   Operation 569 'bitconcatenate' 'or_ln62_1' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 570 [1/1] (2.55ns)   --->   "%c_11 = add i32 %or_ln62_1, i32 %d_11" [md5.c:62]   --->   Operation 570 'add' 'c_11' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 571 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_1)   --->   "%and_ln63 = and i32 %c_11, i32 %a_11" [md5.c:63]   --->   Operation 571 'and' 'and_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 572 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_1)   --->   "%xor_ln63 = xor i32 %a_11, i32 4294967295" [md5.c:63]   --->   Operation 572 'xor' 'xor_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 573 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_1)   --->   "%and_ln63_1 = and i32 %d_11, i32 %xor_ln63" [md5.c:63]   --->   Operation 573 'and' 'and_ln63_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 574 [1/1] (0.00ns) (grouped into LUT with out node add_ln63_1)   --->   "%or_ln63 = or i32 %and_ln63, i32 %and_ln63_1" [md5.c:63]   --->   Operation 574 'or' 'or_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 575 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln63_1 = add i32 %or_ln63, i32 3889429448" [md5.c:63]   --->   Operation 575 'add' 'add_ln63_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 6.92>
ST_46 : Operation 576 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63 = add i32 %b_9, i32 %or_ln32_5_4" [md5.c:63]   --->   Operation 576 'add' 'add_ln63' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 577 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_10 = add i32 %add_ln63_1, i32 %add_ln63" [md5.c:63]   --->   Operation 577 'add' 'b_10' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 578 [1/1] (0.00ns)   --->   "%trunc_ln63 = trunc i32 %b_10" [md5.c:63]   --->   Operation 578 'trunc' 'trunc_ln63' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 579 [1/1] (0.00ns)   --->   "%lshr_ln23 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %b_10, i32 12, i32 31" [md5.c:63]   --->   Operation 579 'partselect' 'lshr_ln23' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 580 [1/1] (0.00ns)   --->   "%or_ln63_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i12.i20, i12 %trunc_ln63, i20 %lshr_ln23" [md5.c:63]   --->   Operation 580 'bitconcatenate' 'or_ln63_1' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 581 [1/1] (2.55ns)   --->   "%b_11 = add i32 %or_ln63_1, i32 %c_11" [md5.c:63]   --->   Operation 581 'add' 'b_11' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 46> <Delay = 6.92>
ST_47 : Operation 582 [1/1] (0.00ns) (grouped into LUT with out node add_ln64_1)   --->   "%and_ln64 = and i32 %b_11, i32 %d_11" [md5.c:64]   --->   Operation 582 'and' 'and_ln64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 583 [1/1] (0.00ns) (grouped into LUT with out node add_ln64_1)   --->   "%xor_ln64 = xor i32 %d_11, i32 4294967295" [md5.c:64]   --->   Operation 583 'xor' 'xor_ln64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 584 [1/1] (0.00ns) (grouped into LUT with out node add_ln64_1)   --->   "%and_ln64_1 = and i32 %c_11, i32 %xor_ln64" [md5.c:64]   --->   Operation 584 'and' 'and_ln64_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 585 [1/1] (0.00ns) (grouped into LUT with out node add_ln64_1)   --->   "%or_ln64 = or i32 %and_ln64, i32 %and_ln64_1" [md5.c:64]   --->   Operation 585 'or' 'or_ln64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 586 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln64 = add i32 %a_11, i32 %or_ln32_5_9" [md5.c:64]   --->   Operation 586 'add' 'add_ln64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 587 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln64_1 = add i32 %or_ln64, i32 568446438" [md5.c:64]   --->   Operation 587 'add' 'add_ln64_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 588 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_12 = add i32 %add_ln64_1, i32 %add_ln64" [md5.c:64]   --->   Operation 588 'add' 'a_12' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 589 [1/1] (0.00ns)   --->   "%trunc_ln64 = trunc i32 %a_12" [md5.c:64]   --->   Operation 589 'trunc' 'trunc_ln64' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 590 [1/1] (0.00ns)   --->   "%lshr_ln24 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %a_12, i32 27, i32 31" [md5.c:64]   --->   Operation 590 'partselect' 'lshr_ln24' <Predicate = true> <Delay = 0.00>

State 48 <SV = 47> <Delay = 5.10>
ST_48 : Operation 591 [1/1] (0.00ns)   --->   "%or_ln64_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i27.i5, i27 %trunc_ln64, i5 %lshr_ln24" [md5.c:64]   --->   Operation 591 'bitconcatenate' 'or_ln64_1' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 592 [1/1] (2.55ns)   --->   "%a_13 = add i32 %or_ln64_1, i32 %b_11" [md5.c:64]   --->   Operation 592 'add' 'a_13' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 593 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_1)   --->   "%and_ln65 = and i32 %a_13, i32 %c_11" [md5.c:65]   --->   Operation 593 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 594 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_1)   --->   "%xor_ln65 = xor i32 %c_11, i32 4294967295" [md5.c:65]   --->   Operation 594 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 595 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_1)   --->   "%and_ln65_1 = and i32 %b_11, i32 %xor_ln65" [md5.c:65]   --->   Operation 595 'and' 'and_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 596 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_1)   --->   "%or_ln65 = or i32 %and_ln65, i32 %and_ln65_1" [md5.c:65]   --->   Operation 596 'or' 'or_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 597 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln65_1 = add i32 %or_ln65, i32 3275163606" [md5.c:65]   --->   Operation 597 'add' 'add_ln65_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 48> <Delay = 6.92>
ST_49 : Operation 598 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65 = add i32 %d_11, i32 %or_ln32_5_13" [md5.c:65]   --->   Operation 598 'add' 'add_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 599 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_12 = add i32 %add_ln65_1, i32 %add_ln65" [md5.c:65]   --->   Operation 599 'add' 'd_12' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_49 : Operation 600 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i32 %d_12" [md5.c:65]   --->   Operation 600 'trunc' 'trunc_ln65' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 601 [1/1] (0.00ns)   --->   "%lshr_ln25 = partselect i9 @_ssdm_op_PartSelect.i9.i32.i32.i32, i32 %d_12, i32 23, i32 31" [md5.c:65]   --->   Operation 601 'partselect' 'lshr_ln25' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 602 [1/1] (0.00ns)   --->   "%or_ln65_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %trunc_ln65, i9 %lshr_ln25" [md5.c:65]   --->   Operation 602 'bitconcatenate' 'or_ln65_1' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 603 [1/1] (2.55ns)   --->   "%d_13 = add i32 %or_ln65_1, i32 %a_13" [md5.c:65]   --->   Operation 603 'add' 'd_13' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 49> <Delay = 6.92>
ST_50 : Operation 604 [1/1] (0.00ns) (grouped into LUT with out node add_ln66_1)   --->   "%and_ln66 = and i32 %d_13, i32 %b_11" [md5.c:66]   --->   Operation 604 'and' 'and_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 605 [1/1] (0.00ns) (grouped into LUT with out node add_ln66_1)   --->   "%xor_ln66 = xor i32 %b_11, i32 4294967295" [md5.c:66]   --->   Operation 605 'xor' 'xor_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 606 [1/1] (0.00ns) (grouped into LUT with out node add_ln66_1)   --->   "%and_ln66_1 = and i32 %a_13, i32 %xor_ln66" [md5.c:66]   --->   Operation 606 'and' 'and_ln66_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 607 [1/1] (0.00ns) (grouped into LUT with out node add_ln66_1)   --->   "%or_ln66 = or i32 %and_ln66, i32 %and_ln66_1" [md5.c:66]   --->   Operation 607 'or' 'or_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 608 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66 = add i32 %c_11, i32 %or_ln32_5_3" [md5.c:66]   --->   Operation 608 'add' 'add_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 609 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln66_1 = add i32 %or_ln66, i32 4107603335" [md5.c:66]   --->   Operation 609 'add' 'add_ln66_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 610 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_12 = add i32 %add_ln66_1, i32 %add_ln66" [md5.c:66]   --->   Operation 610 'add' 'c_12' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 611 [1/1] (0.00ns)   --->   "%trunc_ln66 = trunc i32 %c_12" [md5.c:66]   --->   Operation 611 'trunc' 'trunc_ln66' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 612 [1/1] (0.00ns)   --->   "%lshr_ln26 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %c_12, i32 18, i32 31" [md5.c:66]   --->   Operation 612 'partselect' 'lshr_ln26' <Predicate = true> <Delay = 0.00>

State 51 <SV = 50> <Delay = 5.10>
ST_51 : Operation 613 [1/1] (0.00ns)   --->   "%or_ln66_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln66, i14 %lshr_ln26" [md5.c:66]   --->   Operation 613 'bitconcatenate' 'or_ln66_1' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 614 [1/1] (2.55ns)   --->   "%c_13 = add i32 %or_ln66_1, i32 %d_13" [md5.c:66]   --->   Operation 614 'add' 'c_13' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 615 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_1)   --->   "%and_ln67 = and i32 %c_13, i32 %a_13" [md5.c:67]   --->   Operation 615 'and' 'and_ln67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 616 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_1)   --->   "%xor_ln67 = xor i32 %a_13, i32 4294967295" [md5.c:67]   --->   Operation 616 'xor' 'xor_ln67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 617 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_1)   --->   "%and_ln67_1 = and i32 %d_13, i32 %xor_ln67" [md5.c:67]   --->   Operation 617 'and' 'and_ln67_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 618 [1/1] (0.00ns) (grouped into LUT with out node add_ln67_1)   --->   "%or_ln67 = or i32 %and_ln67, i32 %and_ln67_1" [md5.c:67]   --->   Operation 618 'or' 'or_ln67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 619 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln67_1 = add i32 %or_ln67, i32 1163531501" [md5.c:67]   --->   Operation 619 'add' 'add_ln67_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 51> <Delay = 6.92>
ST_52 : Operation 620 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln67 = add i32 %b_11, i32 %or_ln32_5_8" [md5.c:67]   --->   Operation 620 'add' 'add_ln67' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_52 : Operation 621 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_12 = add i32 %add_ln67_1, i32 %add_ln67" [md5.c:67]   --->   Operation 621 'add' 'b_12' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_52 : Operation 622 [1/1] (0.00ns)   --->   "%trunc_ln67 = trunc i32 %b_12" [md5.c:67]   --->   Operation 622 'trunc' 'trunc_ln67' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 623 [1/1] (0.00ns)   --->   "%lshr_ln27 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %b_12, i32 12, i32 31" [md5.c:67]   --->   Operation 623 'partselect' 'lshr_ln27' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 624 [1/1] (0.00ns)   --->   "%or_ln67_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i12.i20, i12 %trunc_ln67, i20 %lshr_ln27" [md5.c:67]   --->   Operation 624 'bitconcatenate' 'or_ln67_1' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 625 [1/1] (2.55ns)   --->   "%b_13 = add i32 %or_ln67_1, i32 %c_13" [md5.c:67]   --->   Operation 625 'add' 'b_13' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 52> <Delay = 6.92>
ST_53 : Operation 626 [1/1] (0.00ns) (grouped into LUT with out node add_ln68_1)   --->   "%and_ln68 = and i32 %b_13, i32 %d_13" [md5.c:68]   --->   Operation 626 'and' 'and_ln68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 627 [1/1] (0.00ns) (grouped into LUT with out node add_ln68_1)   --->   "%xor_ln68 = xor i32 %d_13, i32 4294967295" [md5.c:68]   --->   Operation 627 'xor' 'xor_ln68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 628 [1/1] (0.00ns) (grouped into LUT with out node add_ln68_1)   --->   "%and_ln68_1 = and i32 %c_13, i32 %xor_ln68" [md5.c:68]   --->   Operation 628 'and' 'and_ln68_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 629 [1/1] (0.00ns) (grouped into LUT with out node add_ln68_1)   --->   "%or_ln68 = or i32 %and_ln68, i32 %and_ln68_1" [md5.c:68]   --->   Operation 629 'or' 'or_ln68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 630 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln68 = add i32 %a_13, i32 2850285829" [md5.c:68]   --->   Operation 630 'add' 'add_ln68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_53 : Operation 631 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln68_1 = add i32 %or_ln32_5_12, i32 %or_ln68" [md5.c:68]   --->   Operation 631 'add' 'add_ln68_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 632 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_14 = add i32 %add_ln68_1, i32 %add_ln68" [md5.c:68]   --->   Operation 632 'add' 'a_14' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_53 : Operation 633 [1/1] (0.00ns)   --->   "%trunc_ln68 = trunc i32 %a_14" [md5.c:68]   --->   Operation 633 'trunc' 'trunc_ln68' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 634 [1/1] (0.00ns)   --->   "%lshr_ln28 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %a_14, i32 27, i32 31" [md5.c:68]   --->   Operation 634 'partselect' 'lshr_ln28' <Predicate = true> <Delay = 0.00>

State 54 <SV = 53> <Delay = 5.10>
ST_54 : Operation 635 [1/1] (0.00ns)   --->   "%or_ln68_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i27.i5, i27 %trunc_ln68, i5 %lshr_ln28" [md5.c:68]   --->   Operation 635 'bitconcatenate' 'or_ln68_1' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 636 [1/1] (2.55ns)   --->   "%a_15 = add i32 %or_ln68_1, i32 %b_13" [md5.c:68]   --->   Operation 636 'add' 'a_15' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 637 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_1)   --->   "%and_ln69 = and i32 %a_15, i32 %c_13" [md5.c:69]   --->   Operation 637 'and' 'and_ln69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 638 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_1)   --->   "%xor_ln69 = xor i32 %c_13, i32 4294967295" [md5.c:69]   --->   Operation 638 'xor' 'xor_ln69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 639 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_1)   --->   "%and_ln69_1 = and i32 %b_13, i32 %xor_ln69" [md5.c:69]   --->   Operation 639 'and' 'and_ln69_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 640 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_1)   --->   "%or_ln69 = or i32 %and_ln69, i32 %and_ln69_1" [md5.c:69]   --->   Operation 640 'or' 'or_ln69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 641 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln69_1 = add i32 %or_ln69, i32 4243563512" [md5.c:69]   --->   Operation 641 'add' 'add_ln69_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 54> <Delay = 6.92>
ST_55 : Operation 642 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln69 = add i32 %d_13, i32 %or_ln32_5_2" [md5.c:69]   --->   Operation 642 'add' 'add_ln69' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 643 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_14 = add i32 %add_ln69_1, i32 %add_ln69" [md5.c:69]   --->   Operation 643 'add' 'd_14' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 644 [1/1] (0.00ns)   --->   "%trunc_ln69 = trunc i32 %d_14" [md5.c:69]   --->   Operation 644 'trunc' 'trunc_ln69' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 645 [1/1] (0.00ns)   --->   "%lshr_ln29 = partselect i9 @_ssdm_op_PartSelect.i9.i32.i32.i32, i32 %d_14, i32 23, i32 31" [md5.c:69]   --->   Operation 645 'partselect' 'lshr_ln29' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 646 [1/1] (0.00ns)   --->   "%or_ln69_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i23.i9, i23 %trunc_ln69, i9 %lshr_ln29" [md5.c:69]   --->   Operation 646 'bitconcatenate' 'or_ln69_1' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 647 [1/1] (2.55ns)   --->   "%d_15 = add i32 %or_ln69_1, i32 %a_15" [md5.c:69]   --->   Operation 647 'add' 'd_15' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 55> <Delay = 6.92>
ST_56 : Operation 648 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_1)   --->   "%and_ln70 = and i32 %d_15, i32 %b_13" [md5.c:70]   --->   Operation 648 'and' 'and_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 649 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_1)   --->   "%xor_ln70 = xor i32 %b_13, i32 4294967295" [md5.c:70]   --->   Operation 649 'xor' 'xor_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 650 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_1)   --->   "%and_ln70_1 = and i32 %a_15, i32 %xor_ln70" [md5.c:70]   --->   Operation 650 'and' 'and_ln70_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 651 [1/1] (0.00ns) (grouped into LUT with out node add_ln70_1)   --->   "%or_ln70 = or i32 %and_ln70, i32 %and_ln70_1" [md5.c:70]   --->   Operation 651 'or' 'or_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 652 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70 = add i32 %c_13, i32 %or_ln32_5_7" [md5.c:70]   --->   Operation 652 'add' 'add_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 653 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln70_1 = add i32 %or_ln70, i32 1735328473" [md5.c:70]   --->   Operation 653 'add' 'add_ln70_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 654 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_14 = add i32 %add_ln70_1, i32 %add_ln70" [md5.c:70]   --->   Operation 654 'add' 'c_14' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 655 [1/1] (0.00ns)   --->   "%trunc_ln70 = trunc i32 %c_14" [md5.c:70]   --->   Operation 655 'trunc' 'trunc_ln70' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 656 [1/1] (0.00ns)   --->   "%lshr_ln30 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %c_14, i32 18, i32 31" [md5.c:70]   --->   Operation 656 'partselect' 'lshr_ln30' <Predicate = true> <Delay = 0.00>

State 57 <SV = 56> <Delay = 5.10>
ST_57 : Operation 657 [1/1] (0.00ns)   --->   "%or_ln70_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln70, i14 %lshr_ln30" [md5.c:70]   --->   Operation 657 'bitconcatenate' 'or_ln70_1' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 658 [1/1] (2.55ns)   --->   "%c_15 = add i32 %or_ln70_1, i32 %d_15" [md5.c:70]   --->   Operation 658 'add' 'c_15' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 659 [1/1] (0.00ns) (grouped into LUT with out node add_ln71_1)   --->   "%and_ln71 = and i32 %c_15, i32 %a_15" [md5.c:71]   --->   Operation 659 'and' 'and_ln71' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 660 [1/1] (0.00ns) (grouped into LUT with out node add_ln71_1)   --->   "%xor_ln71 = xor i32 %a_15, i32 4294967295" [md5.c:71]   --->   Operation 660 'xor' 'xor_ln71' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 661 [1/1] (0.00ns) (grouped into LUT with out node add_ln71_1)   --->   "%and_ln71_1 = and i32 %d_15, i32 %xor_ln71" [md5.c:71]   --->   Operation 661 'and' 'and_ln71_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 662 [1/1] (0.00ns) (grouped into LUT with out node add_ln71_1)   --->   "%or_ln71 = or i32 %and_ln71, i32 %and_ln71_1" [md5.c:71]   --->   Operation 662 'or' 'or_ln71' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 663 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln71_1 = add i32 %or_ln32_5_11, i32 %or_ln71" [md5.c:71]   --->   Operation 663 'add' 'add_ln71_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 57> <Delay = 6.92>
ST_58 : Operation 664 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln71 = add i32 %b_13, i32 2368359562" [md5.c:71]   --->   Operation 664 'add' 'add_ln71' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_58 : Operation 665 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_14 = add i32 %add_ln71_1, i32 %add_ln71" [md5.c:71]   --->   Operation 665 'add' 'b_14' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_58 : Operation 666 [1/1] (0.00ns)   --->   "%trunc_ln71 = trunc i32 %b_14" [md5.c:71]   --->   Operation 666 'trunc' 'trunc_ln71' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 667 [1/1] (0.00ns)   --->   "%lshr_ln31 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %b_14, i32 12, i32 31" [md5.c:71]   --->   Operation 667 'partselect' 'lshr_ln31' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 668 [1/1] (0.00ns)   --->   "%or_ln71_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i12.i20, i12 %trunc_ln71, i20 %lshr_ln31" [md5.c:71]   --->   Operation 668 'bitconcatenate' 'or_ln71_1' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 669 [1/1] (2.55ns)   --->   "%b_15 = add i32 %or_ln71_1, i32 %c_15" [md5.c:71]   --->   Operation 669 'add' 'b_15' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 59 <SV = 58> <Delay = 6.92>
ST_59 : Operation 670 [1/1] (0.00ns) (grouped into LUT with out node add_ln73_1)   --->   "%xor_ln73 = xor i32 %d_15, i32 %b_15" [md5.c:73]   --->   Operation 670 'xor' 'xor_ln73' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 671 [1/1] (0.00ns) (grouped into LUT with out node add_ln73_1)   --->   "%xor_ln73_1 = xor i32 %xor_ln73, i32 %c_15" [md5.c:73]   --->   Operation 671 'xor' 'xor_ln73_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 672 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln73 = add i32 %a_15, i32 %or_ln32_5_5" [md5.c:73]   --->   Operation 672 'add' 'add_ln73' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_59 : Operation 673 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln73_1 = add i32 %xor_ln73_1, i32 4294588738" [md5.c:73]   --->   Operation 673 'add' 'add_ln73_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 674 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_16 = add i32 %add_ln73_1, i32 %add_ln73" [md5.c:73]   --->   Operation 674 'add' 'a_16' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_59 : Operation 675 [1/1] (0.00ns)   --->   "%trunc_ln73 = trunc i32 %a_16" [md5.c:73]   --->   Operation 675 'trunc' 'trunc_ln73' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 676 [1/1] (0.00ns)   --->   "%lshr_ln32 = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %a_16, i32 28, i32 31" [md5.c:73]   --->   Operation 676 'partselect' 'lshr_ln32' <Predicate = true> <Delay = 0.00>

State 60 <SV = 59> <Delay = 5.10>
ST_60 : Operation 677 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i28.i4, i28 %trunc_ln73, i4 %lshr_ln32" [md5.c:73]   --->   Operation 677 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 678 [1/1] (2.55ns)   --->   "%a_17 = add i32 %or_ln, i32 %b_15" [md5.c:73]   --->   Operation 678 'add' 'a_17' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 679 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_1)   --->   "%xor_ln74 = xor i32 %c_15, i32 %a_17" [md5.c:74]   --->   Operation 679 'xor' 'xor_ln74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 680 [1/1] (0.00ns) (grouped into LUT with out node add_ln74_1)   --->   "%xor_ln74_1 = xor i32 %xor_ln74, i32 %b_15" [md5.c:74]   --->   Operation 680 'xor' 'xor_ln74_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 681 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln74_1 = add i32 %or_ln32_5_8, i32 %xor_ln74_1" [md5.c:74]   --->   Operation 681 'add' 'add_ln74_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 61 <SV = 60> <Delay = 6.92>
ST_61 : Operation 682 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74 = add i32 %d_15, i32 2272392833" [md5.c:74]   --->   Operation 682 'add' 'add_ln74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_61 : Operation 683 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_16 = add i32 %add_ln74_1, i32 %add_ln74" [md5.c:74]   --->   Operation 683 'add' 'd_16' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_61 : Operation 684 [1/1] (0.00ns)   --->   "%trunc_ln74 = trunc i32 %d_16" [md5.c:74]   --->   Operation 684 'trunc' 'trunc_ln74' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 685 [1/1] (0.00ns)   --->   "%lshr_ln33 = partselect i11 @_ssdm_op_PartSelect.i11.i32.i32.i32, i32 %d_16, i32 21, i32 31" [md5.c:74]   --->   Operation 685 'partselect' 'lshr_ln33' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 686 [1/1] (0.00ns)   --->   "%or_ln1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i21.i11, i21 %trunc_ln74, i11 %lshr_ln33" [md5.c:74]   --->   Operation 686 'bitconcatenate' 'or_ln1' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 687 [1/1] (2.55ns)   --->   "%d_17 = add i32 %or_ln1, i32 %a_17" [md5.c:74]   --->   Operation 687 'add' 'd_17' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 62 <SV = 61> <Delay = 6.92>
ST_62 : Operation 688 [1/1] (0.00ns) (grouped into LUT with out node add_ln75_1)   --->   "%xor_ln75 = xor i32 %b_15, i32 %d_17" [md5.c:75]   --->   Operation 688 'xor' 'xor_ln75' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 689 [1/1] (0.00ns) (grouped into LUT with out node add_ln75_1)   --->   "%xor_ln75_1 = xor i32 %xor_ln75, i32 %a_17" [md5.c:75]   --->   Operation 689 'xor' 'xor_ln75_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 690 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75 = add i32 %c_15, i32 %or_ln32_5_10" [md5.c:75]   --->   Operation 690 'add' 'add_ln75' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_62 : Operation 691 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln75_1 = add i32 %xor_ln75_1, i32 1839030562" [md5.c:75]   --->   Operation 691 'add' 'add_ln75_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 692 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_16 = add i32 %add_ln75_1, i32 %add_ln75" [md5.c:75]   --->   Operation 692 'add' 'c_16' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_62 : Operation 693 [1/1] (0.00ns)   --->   "%trunc_ln75 = trunc i32 %c_16" [md5.c:75]   --->   Operation 693 'trunc' 'trunc_ln75' <Predicate = true> <Delay = 0.00>
ST_62 : Operation 694 [1/1] (0.00ns)   --->   "%lshr_ln34 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %c_16, i32 16, i32 31" [md5.c:75]   --->   Operation 694 'partselect' 'lshr_ln34' <Predicate = true> <Delay = 0.00>

State 63 <SV = 62> <Delay = 5.10>
ST_63 : Operation 695 [1/1] (0.00ns)   --->   "%or_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i16.i16, i16 %trunc_ln75, i16 %lshr_ln34" [md5.c:75]   --->   Operation 695 'bitconcatenate' 'or_ln2' <Predicate = true> <Delay = 0.00>
ST_63 : Operation 696 [1/1] (2.55ns)   --->   "%c_17 = add i32 %or_ln2, i32 %d_17" [md5.c:75]   --->   Operation 696 'add' 'c_17' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 697 [1/1] (0.00ns) (grouped into LUT with out node add_ln76_1)   --->   "%xor_ln76 = xor i32 %a_17, i32 %c_17" [md5.c:76]   --->   Operation 697 'xor' 'xor_ln76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 698 [1/1] (0.00ns) (grouped into LUT with out node add_ln76_1)   --->   "%xor_ln76_1 = xor i32 %xor_ln76, i32 %d_17" [md5.c:76]   --->   Operation 698 'xor' 'xor_ln76_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 699 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln76_1 = add i32 %xor_ln76_1, i32 4259657740" [md5.c:76]   --->   Operation 699 'add' 'add_ln76_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 64 <SV = 63> <Delay = 6.92>
ST_64 : Operation 700 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln76 = add i32 %b_15, i32 %or_ln32_5_13" [md5.c:76]   --->   Operation 700 'add' 'add_ln76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_64 : Operation 701 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_16 = add i32 %add_ln76_1, i32 %add_ln76" [md5.c:76]   --->   Operation 701 'add' 'b_16' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_64 : Operation 702 [1/1] (0.00ns)   --->   "%trunc_ln76 = trunc i32 %b_16" [md5.c:76]   --->   Operation 702 'trunc' 'trunc_ln76' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 703 [1/1] (0.00ns)   --->   "%lshr_ln35 = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %b_16, i32 9, i32 31" [md5.c:76]   --->   Operation 703 'partselect' 'lshr_ln35' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 704 [1/1] (0.00ns)   --->   "%or_ln3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i9.i23, i9 %trunc_ln76, i23 %lshr_ln35" [md5.c:76]   --->   Operation 704 'bitconcatenate' 'or_ln3' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 705 [1/1] (2.55ns)   --->   "%b_17 = add i32 %or_ln3, i32 %c_17" [md5.c:76]   --->   Operation 705 'add' 'b_17' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 65 <SV = 64> <Delay = 6.92>
ST_65 : Operation 706 [1/1] (0.00ns) (grouped into LUT with out node add_ln77_1)   --->   "%xor_ln77 = xor i32 %d_17, i32 %b_17" [md5.c:77]   --->   Operation 706 'xor' 'xor_ln77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 707 [1/1] (0.00ns) (grouped into LUT with out node add_ln77_1)   --->   "%xor_ln77_1 = xor i32 %xor_ln77, i32 %c_17" [md5.c:77]   --->   Operation 707 'xor' 'xor_ln77_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 708 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln77 = add i32 %a_17, i32 2763975236" [md5.c:77]   --->   Operation 708 'add' 'add_ln77' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_65 : Operation 709 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln77_1 = add i32 %or_ln32_5_1, i32 %xor_ln77_1" [md5.c:77]   --->   Operation 709 'add' 'add_ln77_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 710 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_18 = add i32 %add_ln77_1, i32 %add_ln77" [md5.c:77]   --->   Operation 710 'add' 'a_18' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_65 : Operation 711 [1/1] (0.00ns)   --->   "%trunc_ln77 = trunc i32 %a_18" [md5.c:77]   --->   Operation 711 'trunc' 'trunc_ln77' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 712 [1/1] (0.00ns)   --->   "%lshr_ln36 = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %a_18, i32 28, i32 31" [md5.c:77]   --->   Operation 712 'partselect' 'lshr_ln36' <Predicate = true> <Delay = 0.00>

State 66 <SV = 65> <Delay = 5.10>
ST_66 : Operation 713 [1/1] (0.00ns)   --->   "%or_ln4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i28.i4, i28 %trunc_ln77, i4 %lshr_ln36" [md5.c:77]   --->   Operation 713 'bitconcatenate' 'or_ln4' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 714 [1/1] (2.55ns)   --->   "%a_19 = add i32 %or_ln4, i32 %b_17" [md5.c:77]   --->   Operation 714 'add' 'a_19' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 715 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_1)   --->   "%xor_ln78 = xor i32 %c_17, i32 %a_19" [md5.c:78]   --->   Operation 715 'xor' 'xor_ln78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 716 [1/1] (0.00ns) (grouped into LUT with out node add_ln78_1)   --->   "%xor_ln78_1 = xor i32 %xor_ln78, i32 %b_17" [md5.c:78]   --->   Operation 716 'xor' 'xor_ln78_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 717 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln78_1 = add i32 %xor_ln78_1, i32 1272893353" [md5.c:78]   --->   Operation 717 'add' 'add_ln78_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 66> <Delay = 6.92>
ST_67 : Operation 718 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78 = add i32 %d_17, i32 %or_ln32_5_4" [md5.c:78]   --->   Operation 718 'add' 'add_ln78' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_67 : Operation 719 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_18 = add i32 %add_ln78_1, i32 %add_ln78" [md5.c:78]   --->   Operation 719 'add' 'd_18' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_67 : Operation 720 [1/1] (0.00ns)   --->   "%trunc_ln78 = trunc i32 %d_18" [md5.c:78]   --->   Operation 720 'trunc' 'trunc_ln78' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 721 [1/1] (0.00ns)   --->   "%lshr_ln37 = partselect i11 @_ssdm_op_PartSelect.i11.i32.i32.i32, i32 %d_18, i32 21, i32 31" [md5.c:78]   --->   Operation 721 'partselect' 'lshr_ln37' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 722 [1/1] (0.00ns)   --->   "%or_ln5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i21.i11, i21 %trunc_ln78, i11 %lshr_ln37" [md5.c:78]   --->   Operation 722 'bitconcatenate' 'or_ln5' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 723 [1/1] (2.55ns)   --->   "%d_19 = add i32 %or_ln5, i32 %a_19" [md5.c:78]   --->   Operation 723 'add' 'd_19' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 68 <SV = 67> <Delay = 6.92>
ST_68 : Operation 724 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_1)   --->   "%xor_ln79 = xor i32 %b_17, i32 %d_19" [md5.c:79]   --->   Operation 724 'xor' 'xor_ln79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 725 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_1)   --->   "%xor_ln79_1 = xor i32 %xor_ln79, i32 %a_19" [md5.c:79]   --->   Operation 725 'xor' 'xor_ln79_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 726 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln79 = add i32 %c_17, i32 %or_ln32_5_7" [md5.c:79]   --->   Operation 726 'add' 'add_ln79' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 727 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln79_1 = add i32 %xor_ln79_1, i32 4139469664" [md5.c:79]   --->   Operation 727 'add' 'add_ln79_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 728 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_18 = add i32 %add_ln79_1, i32 %add_ln79" [md5.c:79]   --->   Operation 728 'add' 'c_18' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 729 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i32 %c_18" [md5.c:79]   --->   Operation 729 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 730 [1/1] (0.00ns)   --->   "%lshr_ln38 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %c_18, i32 16, i32 31" [md5.c:79]   --->   Operation 730 'partselect' 'lshr_ln38' <Predicate = true> <Delay = 0.00>

State 69 <SV = 68> <Delay = 5.10>
ST_69 : Operation 731 [1/1] (0.00ns)   --->   "%or_ln6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i16.i16, i16 %trunc_ln79, i16 %lshr_ln38" [md5.c:79]   --->   Operation 731 'bitconcatenate' 'or_ln6' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 732 [1/1] (2.55ns)   --->   "%c_19 = add i32 %or_ln6, i32 %d_19" [md5.c:79]   --->   Operation 732 'add' 'c_19' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 733 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_1)   --->   "%xor_ln80 = xor i32 %a_19, i32 %c_19" [md5.c:80]   --->   Operation 733 'xor' 'xor_ln80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 734 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_1)   --->   "%xor_ln80_1 = xor i32 %xor_ln80, i32 %d_19" [md5.c:80]   --->   Operation 734 'xor' 'xor_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 735 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln80_1 = add i32 %or_ln32_5_s, i32 %xor_ln80_1" [md5.c:80]   --->   Operation 735 'add' 'add_ln80_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 70 <SV = 69> <Delay = 6.92>
ST_70 : Operation 736 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80 = add i32 %b_17, i32 3200236656" [md5.c:80]   --->   Operation 736 'add' 'add_ln80' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_70 : Operation 737 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_18 = add i32 %add_ln80_1, i32 %add_ln80" [md5.c:80]   --->   Operation 737 'add' 'b_18' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_70 : Operation 738 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i32 %b_18" [md5.c:80]   --->   Operation 738 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 739 [1/1] (0.00ns)   --->   "%lshr_ln39 = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %b_18, i32 9, i32 31" [md5.c:80]   --->   Operation 739 'partselect' 'lshr_ln39' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 740 [1/1] (0.00ns)   --->   "%or_ln7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i9.i23, i9 %trunc_ln80, i23 %lshr_ln39" [md5.c:80]   --->   Operation 740 'bitconcatenate' 'or_ln7' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 741 [1/1] (2.55ns)   --->   "%b_19 = add i32 %or_ln7, i32 %c_19" [md5.c:80]   --->   Operation 741 'add' 'b_19' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 71 <SV = 70> <Delay = 6.92>
ST_71 : Operation 742 [1/1] (0.00ns) (grouped into LUT with out node add_ln81_1)   --->   "%xor_ln81 = xor i32 %d_19, i32 %b_19" [md5.c:81]   --->   Operation 742 'xor' 'xor_ln81' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 743 [1/1] (0.00ns) (grouped into LUT with out node add_ln81_1)   --->   "%xor_ln81_1 = xor i32 %xor_ln81, i32 %c_19" [md5.c:81]   --->   Operation 743 'xor' 'xor_ln81_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 744 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln81 = add i32 %a_19, i32 %or_ln32_5_12" [md5.c:81]   --->   Operation 744 'add' 'add_ln81' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_71 : Operation 745 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln81_1 = add i32 %xor_ln81_1, i32 681279174" [md5.c:81]   --->   Operation 745 'add' 'add_ln81_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 746 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_20 = add i32 %add_ln81_1, i32 %add_ln81" [md5.c:81]   --->   Operation 746 'add' 'a_20' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_71 : Operation 747 [1/1] (0.00ns)   --->   "%trunc_ln81 = trunc i32 %a_20" [md5.c:81]   --->   Operation 747 'trunc' 'trunc_ln81' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 748 [1/1] (0.00ns)   --->   "%lshr_ln40 = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %a_20, i32 28, i32 31" [md5.c:81]   --->   Operation 748 'partselect' 'lshr_ln40' <Predicate = true> <Delay = 0.00>

State 72 <SV = 71> <Delay = 5.10>
ST_72 : Operation 749 [1/1] (0.00ns)   --->   "%or_ln8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i28.i4, i28 %trunc_ln81, i4 %lshr_ln40" [md5.c:81]   --->   Operation 749 'bitconcatenate' 'or_ln8' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 750 [1/1] (2.55ns)   --->   "%a_21 = add i32 %or_ln8, i32 %b_19" [md5.c:81]   --->   Operation 750 'add' 'a_21' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 751 [1/1] (0.00ns) (grouped into LUT with out node add_ln82_1)   --->   "%xor_ln82 = xor i32 %c_19, i32 %a_21" [md5.c:82]   --->   Operation 751 'xor' 'xor_ln82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 752 [1/1] (0.00ns) (grouped into LUT with out node add_ln82_1)   --->   "%xor_ln82_1 = xor i32 %xor_ln82, i32 %b_19" [md5.c:82]   --->   Operation 752 'xor' 'xor_ln82_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 753 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln82_1 = add i32 %xor_ln82_1, i32 3936430074" [md5.c:82]   --->   Operation 753 'add' 'add_ln82_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 73 <SV = 72> <Delay = 6.92>
ST_73 : Operation 754 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln82 = add i32 %d_19, i32 %or_ln32_5" [md5.c:82]   --->   Operation 754 'add' 'add_ln82' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_73 : Operation 755 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_20 = add i32 %add_ln82_1, i32 %add_ln82" [md5.c:82]   --->   Operation 755 'add' 'd_20' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_73 : Operation 756 [1/1] (0.00ns)   --->   "%trunc_ln82 = trunc i32 %d_20" [md5.c:82]   --->   Operation 756 'trunc' 'trunc_ln82' <Predicate = true> <Delay = 0.00>
ST_73 : Operation 757 [1/1] (0.00ns)   --->   "%lshr_ln41 = partselect i11 @_ssdm_op_PartSelect.i11.i32.i32.i32, i32 %d_20, i32 21, i32 31" [md5.c:82]   --->   Operation 757 'partselect' 'lshr_ln41' <Predicate = true> <Delay = 0.00>
ST_73 : Operation 758 [1/1] (0.00ns)   --->   "%or_ln9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i21.i11, i21 %trunc_ln82, i11 %lshr_ln41" [md5.c:82]   --->   Operation 758 'bitconcatenate' 'or_ln9' <Predicate = true> <Delay = 0.00>
ST_73 : Operation 759 [1/1] (2.55ns)   --->   "%d_21 = add i32 %or_ln9, i32 %a_21" [md5.c:82]   --->   Operation 759 'add' 'd_21' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 74 <SV = 73> <Delay = 6.92>
ST_74 : Operation 760 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_1)   --->   "%xor_ln83 = xor i32 %b_19, i32 %d_21" [md5.c:83]   --->   Operation 760 'xor' 'xor_ln83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 761 [1/1] (0.00ns) (grouped into LUT with out node add_ln83_1)   --->   "%xor_ln83_1 = xor i32 %xor_ln83, i32 %a_21" [md5.c:83]   --->   Operation 761 'xor' 'xor_ln83_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 762 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83 = add i32 %c_19, i32 %or_ln32_5_3" [md5.c:83]   --->   Operation 762 'add' 'add_ln83' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_74 : Operation 763 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln83_1 = add i32 %xor_ln83_1, i32 3572445317" [md5.c:83]   --->   Operation 763 'add' 'add_ln83_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 764 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_20 = add i32 %add_ln83_1, i32 %add_ln83" [md5.c:83]   --->   Operation 764 'add' 'c_20' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_74 : Operation 765 [1/1] (0.00ns)   --->   "%trunc_ln83 = trunc i32 %c_20" [md5.c:83]   --->   Operation 765 'trunc' 'trunc_ln83' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 766 [1/1] (0.00ns)   --->   "%lshr_ln42 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %c_20, i32 16, i32 31" [md5.c:83]   --->   Operation 766 'partselect' 'lshr_ln42' <Predicate = true> <Delay = 0.00>

State 75 <SV = 74> <Delay = 5.10>
ST_75 : Operation 767 [1/1] (0.00ns)   --->   "%or_ln10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i16.i16, i16 %trunc_ln83, i16 %lshr_ln42" [md5.c:83]   --->   Operation 767 'bitconcatenate' 'or_ln10' <Predicate = true> <Delay = 0.00>
ST_75 : Operation 768 [1/1] (2.55ns)   --->   "%c_21 = add i32 %or_ln10, i32 %d_21" [md5.c:83]   --->   Operation 768 'add' 'c_21' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 769 [1/1] (0.00ns) (grouped into LUT with out node add_ln84_1)   --->   "%xor_ln84 = xor i32 %a_21, i32 %c_21" [md5.c:84]   --->   Operation 769 'xor' 'xor_ln84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 770 [1/1] (0.00ns) (grouped into LUT with out node add_ln84_1)   --->   "%xor_ln84_1 = xor i32 %xor_ln84, i32 %d_21" [md5.c:84]   --->   Operation 770 'xor' 'xor_ln84_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 771 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln84_1 = add i32 %xor_ln84_1, i32 76029189" [md5.c:84]   --->   Operation 771 'add' 'add_ln84_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 76 <SV = 75> <Delay = 6.92>
ST_76 : Operation 772 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln84 = add i32 %b_19, i32 %or_ln32_5_6" [md5.c:84]   --->   Operation 772 'add' 'add_ln84' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_76 : Operation 773 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_20 = add i32 %add_ln84_1, i32 %add_ln84" [md5.c:84]   --->   Operation 773 'add' 'b_20' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_76 : Operation 774 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i32 %b_20" [md5.c:84]   --->   Operation 774 'trunc' 'trunc_ln84' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 775 [1/1] (0.00ns)   --->   "%lshr_ln43 = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %b_20, i32 9, i32 31" [md5.c:84]   --->   Operation 775 'partselect' 'lshr_ln43' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 776 [1/1] (0.00ns)   --->   "%or_ln11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i9.i23, i9 %trunc_ln84, i23 %lshr_ln43" [md5.c:84]   --->   Operation 776 'bitconcatenate' 'or_ln11' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 777 [1/1] (2.55ns)   --->   "%b_21 = add i32 %or_ln11, i32 %c_21" [md5.c:84]   --->   Operation 777 'add' 'b_21' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 77 <SV = 76> <Delay = 6.92>
ST_77 : Operation 778 [1/1] (0.00ns) (grouped into LUT with out node add_ln85_1)   --->   "%xor_ln85 = xor i32 %d_21, i32 %b_21" [md5.c:85]   --->   Operation 778 'xor' 'xor_ln85' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 779 [1/1] (0.00ns) (grouped into LUT with out node add_ln85_1)   --->   "%xor_ln85_1 = xor i32 %xor_ln85, i32 %c_21" [md5.c:85]   --->   Operation 779 'xor' 'xor_ln85_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 780 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln85 = add i32 %a_21, i32 %or_ln32_5_9" [md5.c:85]   --->   Operation 780 'add' 'add_ln85' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_77 : Operation 781 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln85_1 = add i32 %xor_ln85_1, i32 3654602809" [md5.c:85]   --->   Operation 781 'add' 'add_ln85_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 782 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_22 = add i32 %add_ln85_1, i32 %add_ln85" [md5.c:85]   --->   Operation 782 'add' 'a_22' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_77 : Operation 783 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i32 %a_22" [md5.c:85]   --->   Operation 783 'trunc' 'trunc_ln85' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 784 [1/1] (0.00ns)   --->   "%lshr_ln44 = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %a_22, i32 28, i32 31" [md5.c:85]   --->   Operation 784 'partselect' 'lshr_ln44' <Predicate = true> <Delay = 0.00>

State 78 <SV = 77> <Delay = 5.10>
ST_78 : Operation 785 [1/1] (0.00ns)   --->   "%or_ln12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i28.i4, i28 %trunc_ln85, i4 %lshr_ln44" [md5.c:85]   --->   Operation 785 'bitconcatenate' 'or_ln12' <Predicate = true> <Delay = 0.00>
ST_78 : Operation 786 [1/1] (2.55ns)   --->   "%a_23 = add i32 %or_ln12, i32 %b_21" [md5.c:85]   --->   Operation 786 'add' 'a_23' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 787 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_1)   --->   "%xor_ln86 = xor i32 %c_21, i32 %a_23" [md5.c:86]   --->   Operation 787 'xor' 'xor_ln86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 788 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_1)   --->   "%xor_ln86_1 = xor i32 %xor_ln86, i32 %b_21" [md5.c:86]   --->   Operation 788 'xor' 'xor_ln86_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 789 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln86_1 = add i32 %xor_ln86_1, i32 3873151461" [md5.c:86]   --->   Operation 789 'add' 'add_ln86_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 79 <SV = 78> <Delay = 6.92>
ST_79 : Operation 790 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln86 = add i32 %d_21, i32 %or_ln32_5_11" [md5.c:86]   --->   Operation 790 'add' 'add_ln86' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_79 : Operation 791 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_22 = add i32 %add_ln86_1, i32 %add_ln86" [md5.c:86]   --->   Operation 791 'add' 'd_22' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_79 : Operation 792 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i32 %d_22" [md5.c:86]   --->   Operation 792 'trunc' 'trunc_ln86' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 793 [1/1] (0.00ns)   --->   "%lshr_ln45 = partselect i11 @_ssdm_op_PartSelect.i11.i32.i32.i32, i32 %d_22, i32 21, i32 31" [md5.c:86]   --->   Operation 793 'partselect' 'lshr_ln45' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 794 [1/1] (0.00ns)   --->   "%or_ln13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i21.i11, i21 %trunc_ln86, i11 %lshr_ln45" [md5.c:86]   --->   Operation 794 'bitconcatenate' 'or_ln13' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 795 [1/1] (2.55ns)   --->   "%d_23 = add i32 %or_ln13, i32 %a_23" [md5.c:86]   --->   Operation 795 'add' 'd_23' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 80 <SV = 79> <Delay = 6.92>
ST_80 : Operation 796 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_1)   --->   "%xor_ln87 = xor i32 %b_21, i32 %d_23" [md5.c:87]   --->   Operation 796 'xor' 'xor_ln87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 797 [1/1] (0.00ns) (grouped into LUT with out node add_ln87_1)   --->   "%xor_ln87_1 = xor i32 %xor_ln87, i32 %a_23" [md5.c:87]   --->   Operation 797 'xor' 'xor_ln87_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 798 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln87 = add i32 %c_21, i32 %or_ln32_5_14" [md5.c:87]   --->   Operation 798 'add' 'add_ln87' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 799 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln87_1 = add i32 %xor_ln87_1, i32 530742520" [md5.c:87]   --->   Operation 799 'add' 'add_ln87_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 800 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_22 = add i32 %add_ln87_1, i32 %add_ln87" [md5.c:87]   --->   Operation 800 'add' 'c_22' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 801 [1/1] (0.00ns)   --->   "%trunc_ln87 = trunc i32 %c_22" [md5.c:87]   --->   Operation 801 'trunc' 'trunc_ln87' <Predicate = true> <Delay = 0.00>
ST_80 : Operation 802 [1/1] (0.00ns)   --->   "%lshr_ln46 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %c_22, i32 16, i32 31" [md5.c:87]   --->   Operation 802 'partselect' 'lshr_ln46' <Predicate = true> <Delay = 0.00>

State 81 <SV = 80> <Delay = 5.10>
ST_81 : Operation 803 [1/1] (0.00ns)   --->   "%or_ln14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i16.i16, i16 %trunc_ln87, i16 %lshr_ln46" [md5.c:87]   --->   Operation 803 'bitconcatenate' 'or_ln14' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 804 [1/1] (2.55ns)   --->   "%c_23 = add i32 %or_ln14, i32 %d_23" [md5.c:87]   --->   Operation 804 'add' 'c_23' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 805 [1/1] (0.00ns) (grouped into LUT with out node add_ln88_1)   --->   "%xor_ln88 = xor i32 %a_23, i32 %c_23" [md5.c:88]   --->   Operation 805 'xor' 'xor_ln88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 806 [1/1] (0.00ns) (grouped into LUT with out node add_ln88_1)   --->   "%xor_ln88_1 = xor i32 %xor_ln88, i32 %d_23" [md5.c:88]   --->   Operation 806 'xor' 'xor_ln88_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 807 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln88_1 = add i32 %xor_ln88_1, i32 3299628645" [md5.c:88]   --->   Operation 807 'add' 'add_ln88_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 82 <SV = 81> <Delay = 6.92>
ST_82 : Operation 808 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln88 = add i32 %b_21, i32 %or_ln32_5_2" [md5.c:88]   --->   Operation 808 'add' 'add_ln88' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_82 : Operation 809 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_22 = add i32 %add_ln88_1, i32 %add_ln88" [md5.c:88]   --->   Operation 809 'add' 'b_22' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_82 : Operation 810 [1/1] (0.00ns)   --->   "%trunc_ln88 = trunc i32 %b_22" [md5.c:88]   --->   Operation 810 'trunc' 'trunc_ln88' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 811 [1/1] (0.00ns)   --->   "%lshr_ln47 = partselect i23 @_ssdm_op_PartSelect.i23.i32.i32.i32, i32 %b_22, i32 9, i32 31" [md5.c:88]   --->   Operation 811 'partselect' 'lshr_ln47' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 812 [1/1] (0.00ns)   --->   "%or_ln15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i9.i23, i9 %trunc_ln88, i23 %lshr_ln47" [md5.c:88]   --->   Operation 812 'bitconcatenate' 'or_ln15' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 813 [1/1] (2.55ns)   --->   "%b_23 = add i32 %or_ln15, i32 %c_23" [md5.c:88]   --->   Operation 813 'add' 'b_23' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 83 <SV = 82> <Delay = 6.92>
ST_83 : Operation 814 [1/1] (0.00ns) (grouped into LUT with out node add_ln90_1)   --->   "%xor_ln90 = xor i32 %d_23, i32 4294967295" [md5.c:90]   --->   Operation 814 'xor' 'xor_ln90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 815 [1/1] (0.00ns) (grouped into LUT with out node add_ln90_1)   --->   "%or_ln90 = or i32 %b_23, i32 %xor_ln90" [md5.c:90]   --->   Operation 815 'or' 'or_ln90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 816 [1/1] (0.00ns) (grouped into LUT with out node add_ln90_1)   --->   "%xor_ln90_1 = xor i32 %or_ln90, i32 %c_23" [md5.c:90]   --->   Operation 816 'xor' 'xor_ln90_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 817 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln90 = add i32 %a_23, i32 %or_ln32_5" [md5.c:90]   --->   Operation 817 'add' 'add_ln90' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_83 : Operation 818 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln90_1 = add i32 %xor_ln90_1, i32 4096336452" [md5.c:90]   --->   Operation 818 'add' 'add_ln90_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 819 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_24 = add i32 %add_ln90_1, i32 %add_ln90" [md5.c:90]   --->   Operation 819 'add' 'a_24' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_83 : Operation 820 [1/1] (0.00ns)   --->   "%trunc_ln90 = trunc i32 %a_24" [md5.c:90]   --->   Operation 820 'trunc' 'trunc_ln90' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 821 [1/1] (0.00ns)   --->   "%lshr_ln48 = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %a_24, i32 26, i32 31" [md5.c:90]   --->   Operation 821 'partselect' 'lshr_ln48' <Predicate = true> <Delay = 0.00>

State 84 <SV = 83> <Delay = 5.10>
ST_84 : Operation 822 [1/1] (0.00ns)   --->   "%or_ln90_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i26.i6, i26 %trunc_ln90, i6 %lshr_ln48" [md5.c:90]   --->   Operation 822 'bitconcatenate' 'or_ln90_1' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 823 [1/1] (2.55ns)   --->   "%a_25 = add i32 %or_ln90_1, i32 %b_23" [md5.c:90]   --->   Operation 823 'add' 'a_25' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 824 [1/1] (0.00ns) (grouped into LUT with out node add_ln91_1)   --->   "%xor_ln91 = xor i32 %c_23, i32 4294967295" [md5.c:91]   --->   Operation 824 'xor' 'xor_ln91' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 825 [1/1] (0.00ns) (grouped into LUT with out node add_ln91_1)   --->   "%or_ln91 = or i32 %a_25, i32 %xor_ln91" [md5.c:91]   --->   Operation 825 'or' 'or_ln91' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 826 [1/1] (0.00ns) (grouped into LUT with out node add_ln91_1)   --->   "%xor_ln91_1 = xor i32 %or_ln91, i32 %b_23" [md5.c:91]   --->   Operation 826 'xor' 'xor_ln91_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 827 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln91_1 = add i32 %xor_ln91_1, i32 1126891415" [md5.c:91]   --->   Operation 827 'add' 'add_ln91_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 85 <SV = 84> <Delay = 6.92>
ST_85 : Operation 828 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln91 = add i32 %d_23, i32 %or_ln32_5_7" [md5.c:91]   --->   Operation 828 'add' 'add_ln91' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_85 : Operation 829 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_24 = add i32 %add_ln91_1, i32 %add_ln91" [md5.c:91]   --->   Operation 829 'add' 'd_24' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_85 : Operation 830 [1/1] (0.00ns)   --->   "%trunc_ln91 = trunc i32 %d_24" [md5.c:91]   --->   Operation 830 'trunc' 'trunc_ln91' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 831 [1/1] (0.00ns)   --->   "%lshr_ln49 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %d_24, i32 22, i32 31" [md5.c:91]   --->   Operation 831 'partselect' 'lshr_ln49' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 832 [1/1] (0.00ns)   --->   "%or_ln91_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln91, i10 %lshr_ln49" [md5.c:91]   --->   Operation 832 'bitconcatenate' 'or_ln91_1' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 833 [1/1] (2.55ns)   --->   "%d_25 = add i32 %or_ln91_1, i32 %a_25" [md5.c:91]   --->   Operation 833 'add' 'd_25' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 86 <SV = 85> <Delay = 6.92>
ST_86 : Operation 834 [1/1] (0.00ns) (grouped into LUT with out node add_ln92_1)   --->   "%xor_ln92 = xor i32 %b_23, i32 4294967295" [md5.c:92]   --->   Operation 834 'xor' 'xor_ln92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 835 [1/1] (0.00ns) (grouped into LUT with out node add_ln92_1)   --->   "%or_ln92 = or i32 %d_25, i32 %xor_ln92" [md5.c:92]   --->   Operation 835 'or' 'or_ln92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 836 [1/1] (0.00ns) (grouped into LUT with out node add_ln92_1)   --->   "%xor_ln92_1 = xor i32 %or_ln92, i32 %a_25" [md5.c:92]   --->   Operation 836 'xor' 'xor_ln92_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 837 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln92 = add i32 %c_23, i32 2878612391" [md5.c:92]   --->   Operation 837 'add' 'add_ln92' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_86 : Operation 838 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln92_1 = add i32 %or_ln32_5_13, i32 %xor_ln92_1" [md5.c:92]   --->   Operation 838 'add' 'add_ln92_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 839 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_24 = add i32 %add_ln92_1, i32 %add_ln92" [md5.c:92]   --->   Operation 839 'add' 'c_24' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_86 : Operation 840 [1/1] (0.00ns)   --->   "%trunc_ln92 = trunc i32 %c_24" [md5.c:92]   --->   Operation 840 'trunc' 'trunc_ln92' <Predicate = true> <Delay = 0.00>
ST_86 : Operation 841 [1/1] (0.00ns)   --->   "%lshr_ln50 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %c_24, i32 17, i32 31" [md5.c:92]   --->   Operation 841 'partselect' 'lshr_ln50' <Predicate = true> <Delay = 0.00>

State 87 <SV = 86> <Delay = 5.10>
ST_87 : Operation 842 [1/1] (0.00ns)   --->   "%or_ln92_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln92, i15 %lshr_ln50" [md5.c:92]   --->   Operation 842 'bitconcatenate' 'or_ln92_1' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 843 [1/1] (2.55ns)   --->   "%c_25 = add i32 %or_ln92_1, i32 %d_25" [md5.c:92]   --->   Operation 843 'add' 'c_25' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 844 [1/1] (0.00ns) (grouped into LUT with out node add_ln93_1)   --->   "%xor_ln93 = xor i32 %a_25, i32 4294967295" [md5.c:93]   --->   Operation 844 'xor' 'xor_ln93' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 845 [1/1] (0.00ns) (grouped into LUT with out node add_ln93_1)   --->   "%or_ln93 = or i32 %c_25, i32 %xor_ln93" [md5.c:93]   --->   Operation 845 'or' 'or_ln93' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 846 [1/1] (0.00ns) (grouped into LUT with out node add_ln93_1)   --->   "%xor_ln93_1 = xor i32 %or_ln93, i32 %d_25" [md5.c:93]   --->   Operation 846 'xor' 'xor_ln93_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 847 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln93_1 = add i32 %xor_ln93_1, i32 4237533241" [md5.c:93]   --->   Operation 847 'add' 'add_ln93_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 88 <SV = 87> <Delay = 6.92>
ST_88 : Operation 848 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln93 = add i32 %b_23, i32 %or_ln32_5_5" [md5.c:93]   --->   Operation 848 'add' 'add_ln93' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_88 : Operation 849 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_24 = add i32 %add_ln93_1, i32 %add_ln93" [md5.c:93]   --->   Operation 849 'add' 'b_24' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_88 : Operation 850 [1/1] (0.00ns)   --->   "%trunc_ln93 = trunc i32 %b_24" [md5.c:93]   --->   Operation 850 'trunc' 'trunc_ln93' <Predicate = true> <Delay = 0.00>
ST_88 : Operation 851 [1/1] (0.00ns)   --->   "%lshr_ln51 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %b_24, i32 11, i32 31" [md5.c:93]   --->   Operation 851 'partselect' 'lshr_ln51' <Predicate = true> <Delay = 0.00>
ST_88 : Operation 852 [1/1] (0.00ns)   --->   "%or_ln93_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln93, i21 %lshr_ln51" [md5.c:93]   --->   Operation 852 'bitconcatenate' 'or_ln93_1' <Predicate = true> <Delay = 0.00>
ST_88 : Operation 853 [1/1] (2.55ns)   --->   "%b_25 = add i32 %or_ln93_1, i32 %c_25" [md5.c:93]   --->   Operation 853 'add' 'b_25' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 89 <SV = 88> <Delay = 6.92>
ST_89 : Operation 854 [1/1] (0.00ns) (grouped into LUT with out node add_ln94_1)   --->   "%xor_ln94 = xor i32 %d_25, i32 4294967295" [md5.c:94]   --->   Operation 854 'xor' 'xor_ln94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 855 [1/1] (0.00ns) (grouped into LUT with out node add_ln94_1)   --->   "%or_ln94 = or i32 %b_25, i32 %xor_ln94" [md5.c:94]   --->   Operation 855 'or' 'or_ln94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 856 [1/1] (0.00ns) (grouped into LUT with out node add_ln94_1)   --->   "%xor_ln94_1 = xor i32 %or_ln94, i32 %c_25" [md5.c:94]   --->   Operation 856 'xor' 'xor_ln94_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 857 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln94 = add i32 %a_25, i32 %or_ln32_5_11" [md5.c:94]   --->   Operation 857 'add' 'add_ln94' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_89 : Operation 858 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln94_1 = add i32 %xor_ln94_1, i32 1700485571" [md5.c:94]   --->   Operation 858 'add' 'add_ln94_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 859 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_26 = add i32 %add_ln94_1, i32 %add_ln94" [md5.c:94]   --->   Operation 859 'add' 'a_26' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_89 : Operation 860 [1/1] (0.00ns)   --->   "%trunc_ln94 = trunc i32 %a_26" [md5.c:94]   --->   Operation 860 'trunc' 'trunc_ln94' <Predicate = true> <Delay = 0.00>
ST_89 : Operation 861 [1/1] (0.00ns)   --->   "%lshr_ln52 = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %a_26, i32 26, i32 31" [md5.c:94]   --->   Operation 861 'partselect' 'lshr_ln52' <Predicate = true> <Delay = 0.00>

State 90 <SV = 89> <Delay = 5.10>
ST_90 : Operation 862 [1/1] (0.00ns)   --->   "%or_ln94_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i26.i6, i26 %trunc_ln94, i6 %lshr_ln52" [md5.c:94]   --->   Operation 862 'bitconcatenate' 'or_ln94_1' <Predicate = true> <Delay = 0.00>
ST_90 : Operation 863 [1/1] (2.55ns)   --->   "%a_27 = add i32 %or_ln94_1, i32 %b_25" [md5.c:94]   --->   Operation 863 'add' 'a_27' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 864 [1/1] (0.00ns) (grouped into LUT with out node add_ln95_1)   --->   "%xor_ln95 = xor i32 %c_25, i32 4294967295" [md5.c:95]   --->   Operation 864 'xor' 'xor_ln95' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 865 [1/1] (0.00ns) (grouped into LUT with out node add_ln95_1)   --->   "%or_ln95 = or i32 %a_27, i32 %xor_ln95" [md5.c:95]   --->   Operation 865 'or' 'or_ln95' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 866 [1/1] (0.00ns) (grouped into LUT with out node add_ln95_1)   --->   "%xor_ln95_1 = xor i32 %or_ln95, i32 %b_25" [md5.c:95]   --->   Operation 866 'xor' 'xor_ln95_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 867 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln95_1 = add i32 %or_ln32_5_3, i32 %xor_ln95_1" [md5.c:95]   --->   Operation 867 'add' 'add_ln95_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 91 <SV = 90> <Delay = 6.92>
ST_91 : Operation 868 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln95 = add i32 %d_25, i32 2399980690" [md5.c:95]   --->   Operation 868 'add' 'add_ln95' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_91 : Operation 869 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_26 = add i32 %add_ln95_1, i32 %add_ln95" [md5.c:95]   --->   Operation 869 'add' 'd_26' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_91 : Operation 870 [1/1] (0.00ns)   --->   "%trunc_ln95 = trunc i32 %d_26" [md5.c:95]   --->   Operation 870 'trunc' 'trunc_ln95' <Predicate = true> <Delay = 0.00>
ST_91 : Operation 871 [1/1] (0.00ns)   --->   "%lshr_ln53 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %d_26, i32 22, i32 31" [md5.c:95]   --->   Operation 871 'partselect' 'lshr_ln53' <Predicate = true> <Delay = 0.00>
ST_91 : Operation 872 [1/1] (0.00ns)   --->   "%or_ln95_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln95, i10 %lshr_ln53" [md5.c:95]   --->   Operation 872 'bitconcatenate' 'or_ln95_1' <Predicate = true> <Delay = 0.00>
ST_91 : Operation 873 [1/1] (2.55ns)   --->   "%d_27 = add i32 %or_ln95_1, i32 %a_27" [md5.c:95]   --->   Operation 873 'add' 'd_27' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 92 <SV = 91> <Delay = 6.92>
ST_92 : Operation 874 [1/1] (0.00ns) (grouped into LUT with out node add_ln96_1)   --->   "%xor_ln96 = xor i32 %b_25, i32 4294967295" [md5.c:96]   --->   Operation 874 'xor' 'xor_ln96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 875 [1/1] (0.00ns) (grouped into LUT with out node add_ln96_1)   --->   "%or_ln96 = or i32 %d_27, i32 %xor_ln96" [md5.c:96]   --->   Operation 875 'or' 'or_ln96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 876 [1/1] (0.00ns) (grouped into LUT with out node add_ln96_1)   --->   "%xor_ln96_1 = xor i32 %or_ln96, i32 %a_27" [md5.c:96]   --->   Operation 876 'xor' 'xor_ln96_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 877 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln96 = add i32 %c_25, i32 %or_ln32_5_s" [md5.c:96]   --->   Operation 877 'add' 'add_ln96' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_92 : Operation 878 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln96_1 = add i32 %xor_ln96_1, i32 4293915773" [md5.c:96]   --->   Operation 878 'add' 'add_ln96_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 879 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_26 = add i32 %add_ln96_1, i32 %add_ln96" [md5.c:96]   --->   Operation 879 'add' 'c_26' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_92 : Operation 880 [1/1] (0.00ns)   --->   "%trunc_ln96 = trunc i32 %c_26" [md5.c:96]   --->   Operation 880 'trunc' 'trunc_ln96' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 881 [1/1] (0.00ns)   --->   "%lshr_ln54 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %c_26, i32 17, i32 31" [md5.c:96]   --->   Operation 881 'partselect' 'lshr_ln54' <Predicate = true> <Delay = 0.00>

State 93 <SV = 92> <Delay = 5.10>
ST_93 : Operation 882 [1/1] (0.00ns)   --->   "%or_ln96_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln96, i15 %lshr_ln54" [md5.c:96]   --->   Operation 882 'bitconcatenate' 'or_ln96_1' <Predicate = true> <Delay = 0.00>
ST_93 : Operation 883 [1/1] (2.55ns)   --->   "%c_27 = add i32 %or_ln96_1, i32 %d_27" [md5.c:96]   --->   Operation 883 'add' 'c_27' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 884 [1/1] (0.00ns) (grouped into LUT with out node add_ln97_1)   --->   "%xor_ln97 = xor i32 %a_27, i32 4294967295" [md5.c:97]   --->   Operation 884 'xor' 'xor_ln97' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 885 [1/1] (0.00ns) (grouped into LUT with out node add_ln97_1)   --->   "%or_ln97 = or i32 %c_27, i32 %xor_ln97" [md5.c:97]   --->   Operation 885 'or' 'or_ln97' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 886 [1/1] (0.00ns) (grouped into LUT with out node add_ln97_1)   --->   "%xor_ln97_1 = xor i32 %or_ln97, i32 %d_27" [md5.c:97]   --->   Operation 886 'xor' 'xor_ln97_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 887 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln97_1 = add i32 %or_ln32_5_1, i32 %xor_ln97_1" [md5.c:97]   --->   Operation 887 'add' 'add_ln97_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 94 <SV = 93> <Delay = 6.92>
ST_94 : Operation 888 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln97 = add i32 %b_25, i32 2240044497" [md5.c:97]   --->   Operation 888 'add' 'add_ln97' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_94 : Operation 889 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_26 = add i32 %add_ln97_1, i32 %add_ln97" [md5.c:97]   --->   Operation 889 'add' 'b_26' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_94 : Operation 890 [1/1] (0.00ns)   --->   "%trunc_ln97 = trunc i32 %b_26" [md5.c:97]   --->   Operation 890 'trunc' 'trunc_ln97' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 891 [1/1] (0.00ns)   --->   "%lshr_ln55 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %b_26, i32 11, i32 31" [md5.c:97]   --->   Operation 891 'partselect' 'lshr_ln55' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 892 [1/1] (0.00ns)   --->   "%or_ln97_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln97, i21 %lshr_ln55" [md5.c:97]   --->   Operation 892 'bitconcatenate' 'or_ln97_1' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 893 [1/1] (2.55ns)   --->   "%b_27 = add i32 %or_ln97_1, i32 %c_27" [md5.c:97]   --->   Operation 893 'add' 'b_27' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 95 <SV = 94> <Delay = 6.92>
ST_95 : Operation 894 [1/1] (0.00ns) (grouped into LUT with out node add_ln98_1)   --->   "%xor_ln98 = xor i32 %d_27, i32 4294967295" [md5.c:98]   --->   Operation 894 'xor' 'xor_ln98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 895 [1/1] (0.00ns) (grouped into LUT with out node add_ln98_1)   --->   "%or_ln98 = or i32 %b_27, i32 %xor_ln98" [md5.c:98]   --->   Operation 895 'or' 'or_ln98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 896 [1/1] (0.00ns) (grouped into LUT with out node add_ln98_1)   --->   "%xor_ln98_1 = xor i32 %or_ln98, i32 %c_27" [md5.c:98]   --->   Operation 896 'xor' 'xor_ln98_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 897 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln98 = add i32 %a_27, i32 %or_ln32_5_8" [md5.c:98]   --->   Operation 897 'add' 'add_ln98' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_95 : Operation 898 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln98_1 = add i32 %xor_ln98_1, i32 1873313359" [md5.c:98]   --->   Operation 898 'add' 'add_ln98_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 899 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_28 = add i32 %add_ln98_1, i32 %add_ln98" [md5.c:98]   --->   Operation 899 'add' 'a_28' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_95 : Operation 900 [1/1] (0.00ns)   --->   "%trunc_ln98 = trunc i32 %a_28" [md5.c:98]   --->   Operation 900 'trunc' 'trunc_ln98' <Predicate = true> <Delay = 0.00>
ST_95 : Operation 901 [1/1] (0.00ns)   --->   "%lshr_ln56 = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %a_28, i32 26, i32 31" [md5.c:98]   --->   Operation 901 'partselect' 'lshr_ln56' <Predicate = true> <Delay = 0.00>

State 96 <SV = 95> <Delay = 5.10>
ST_96 : Operation 902 [1/1] (0.00ns)   --->   "%or_ln98_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i26.i6, i26 %trunc_ln98, i6 %lshr_ln56" [md5.c:98]   --->   Operation 902 'bitconcatenate' 'or_ln98_1' <Predicate = true> <Delay = 0.00>
ST_96 : Operation 903 [1/1] (2.55ns)   --->   "%a_29 = add i32 %or_ln98_1, i32 %b_27" [md5.c:98]   --->   Operation 903 'add' 'a_29' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 904 [1/1] (0.00ns) (grouped into LUT with out node add_ln99_1)   --->   "%xor_ln99 = xor i32 %c_27, i32 4294967295" [md5.c:99]   --->   Operation 904 'xor' 'xor_ln99' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 905 [1/1] (0.00ns) (grouped into LUT with out node add_ln99_1)   --->   "%or_ln99 = or i32 %a_29, i32 %xor_ln99" [md5.c:99]   --->   Operation 905 'or' 'or_ln99' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 906 [1/1] (0.00ns) (grouped into LUT with out node add_ln99_1)   --->   "%xor_ln99_1 = xor i32 %or_ln99, i32 %b_27" [md5.c:99]   --->   Operation 906 'xor' 'xor_ln99_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 907 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln99_1 = add i32 %xor_ln99_1, i32 4264355552" [md5.c:99]   --->   Operation 907 'add' 'add_ln99_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 97 <SV = 96> <Delay = 6.92>
ST_97 : Operation 908 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln99 = add i32 %d_27, i32 %or_ln32_5_14" [md5.c:99]   --->   Operation 908 'add' 'add_ln99' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_97 : Operation 909 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_28 = add i32 %add_ln99_1, i32 %add_ln99" [md5.c:99]   --->   Operation 909 'add' 'd_28' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_97 : Operation 910 [1/1] (0.00ns)   --->   "%trunc_ln99 = trunc i32 %d_28" [md5.c:99]   --->   Operation 910 'trunc' 'trunc_ln99' <Predicate = true> <Delay = 0.00>
ST_97 : Operation 911 [1/1] (0.00ns)   --->   "%lshr_ln57 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %d_28, i32 22, i32 31" [md5.c:99]   --->   Operation 911 'partselect' 'lshr_ln57' <Predicate = true> <Delay = 0.00>
ST_97 : Operation 912 [1/1] (0.00ns)   --->   "%or_ln99_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln99, i10 %lshr_ln57" [md5.c:99]   --->   Operation 912 'bitconcatenate' 'or_ln99_1' <Predicate = true> <Delay = 0.00>
ST_97 : Operation 913 [1/1] (2.55ns)   --->   "%d_29 = add i32 %or_ln99_1, i32 %a_29" [md5.c:99]   --->   Operation 913 'add' 'd_29' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 98 <SV = 97> <Delay = 6.92>
ST_98 : Operation 914 [1/1] (0.00ns) (grouped into LUT with out node add_ln100_1)   --->   "%xor_ln100 = xor i32 %b_27, i32 4294967295" [md5.c:100]   --->   Operation 914 'xor' 'xor_ln100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 915 [1/1] (0.00ns) (grouped into LUT with out node add_ln100_1)   --->   "%or_ln100 = or i32 %d_29, i32 %xor_ln100" [md5.c:100]   --->   Operation 915 'or' 'or_ln100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 916 [1/1] (0.00ns) (grouped into LUT with out node add_ln100_1)   --->   "%xor_ln100_1 = xor i32 %or_ln100, i32 %a_29" [md5.c:100]   --->   Operation 916 'xor' 'xor_ln100_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 917 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln100 = add i32 %c_27, i32 2734768916" [md5.c:100]   --->   Operation 917 'add' 'add_ln100' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_98 : Operation 918 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln100_1 = add i32 %or_ln32_5_6, i32 %xor_ln100_1" [md5.c:100]   --->   Operation 918 'add' 'add_ln100_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 919 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_28 = add i32 %add_ln100_1, i32 %add_ln100" [md5.c:100]   --->   Operation 919 'add' 'c_28' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_98 : Operation 920 [1/1] (0.00ns)   --->   "%trunc_ln100 = trunc i32 %c_28" [md5.c:100]   --->   Operation 920 'trunc' 'trunc_ln100' <Predicate = true> <Delay = 0.00>
ST_98 : Operation 921 [1/1] (0.00ns)   --->   "%lshr_ln58 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %c_28, i32 17, i32 31" [md5.c:100]   --->   Operation 921 'partselect' 'lshr_ln58' <Predicate = true> <Delay = 0.00>

State 99 <SV = 98> <Delay = 5.10>
ST_99 : Operation 922 [1/1] (0.00ns)   --->   "%or_ln100_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln100, i15 %lshr_ln58" [md5.c:100]   --->   Operation 922 'bitconcatenate' 'or_ln100_1' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 923 [1/1] (2.55ns)   --->   "%c_29 = add i32 %or_ln100_1, i32 %d_29" [md5.c:100]   --->   Operation 923 'add' 'c_29' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 924 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_1)   --->   "%xor_ln101 = xor i32 %a_29, i32 4294967295" [md5.c:101]   --->   Operation 924 'xor' 'xor_ln101' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 925 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_1)   --->   "%or_ln101 = or i32 %c_29, i32 %xor_ln101" [md5.c:101]   --->   Operation 925 'or' 'or_ln101' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 926 [1/1] (0.00ns) (grouped into LUT with out node add_ln101_1)   --->   "%xor_ln101_1 = xor i32 %or_ln101, i32 %d_29" [md5.c:101]   --->   Operation 926 'xor' 'xor_ln101_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 927 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln101_1 = add i32 %xor_ln101_1, i32 1309151649" [md5.c:101]   --->   Operation 927 'add' 'add_ln101_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 100 <SV = 99> <Delay = 6.92>
ST_100 : Operation 928 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln101 = add i32 %b_27, i32 %or_ln32_5_12" [md5.c:101]   --->   Operation 928 'add' 'add_ln101' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_100 : Operation 929 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_28 = add i32 %add_ln101_1, i32 %add_ln101" [md5.c:101]   --->   Operation 929 'add' 'b_28' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_100 : Operation 930 [1/1] (0.00ns)   --->   "%trunc_ln101 = trunc i32 %b_28" [md5.c:101]   --->   Operation 930 'trunc' 'trunc_ln101' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 931 [1/1] (0.00ns)   --->   "%lshr_ln59 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %b_28, i32 11, i32 31" [md5.c:101]   --->   Operation 931 'partselect' 'lshr_ln59' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 932 [1/1] (0.00ns)   --->   "%or_ln101_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln101, i21 %lshr_ln59" [md5.c:101]   --->   Operation 932 'bitconcatenate' 'or_ln101_1' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 933 [1/1] (2.55ns)   --->   "%b_29 = add i32 %or_ln101_1, i32 %c_29" [md5.c:101]   --->   Operation 933 'add' 'b_29' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 101 <SV = 100> <Delay = 6.92>
ST_101 : Operation 934 [1/1] (0.00ns) (grouped into LUT with out node add_ln102_1)   --->   "%xor_ln102 = xor i32 %d_29, i32 4294967295" [md5.c:102]   --->   Operation 934 'xor' 'xor_ln102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 935 [1/1] (0.00ns) (grouped into LUT with out node add_ln102_1)   --->   "%or_ln102 = or i32 %b_29, i32 %xor_ln102" [md5.c:102]   --->   Operation 935 'or' 'or_ln102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 936 [1/1] (0.00ns) (grouped into LUT with out node add_ln102_1)   --->   "%xor_ln102_1 = xor i32 %or_ln102, i32 %c_29" [md5.c:102]   --->   Operation 936 'xor' 'xor_ln102_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 937 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln102 = add i32 %a_29, i32 %or_ln32_5_4" [md5.c:102]   --->   Operation 937 'add' 'add_ln102' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_101 : Operation 938 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln102_1 = add i32 %xor_ln102_1, i32 4149444226" [md5.c:102]   --->   Operation 938 'add' 'add_ln102_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 939 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_30 = add i32 %add_ln102_1, i32 %add_ln102" [md5.c:102]   --->   Operation 939 'add' 'a_30' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_101 : Operation 940 [1/1] (0.00ns)   --->   "%trunc_ln102 = trunc i32 %a_30" [md5.c:102]   --->   Operation 940 'trunc' 'trunc_ln102' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 941 [1/1] (0.00ns)   --->   "%lshr_ln60 = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %a_30, i32 26, i32 31" [md5.c:102]   --->   Operation 941 'partselect' 'lshr_ln60' <Predicate = true> <Delay = 0.00>

State 102 <SV = 101> <Delay = 5.10>
ST_102 : Operation 942 [1/1] (0.00ns)   --->   "%or_ln102_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i26.i6, i26 %trunc_ln102, i6 %lshr_ln60" [md5.c:102]   --->   Operation 942 'bitconcatenate' 'or_ln102_1' <Predicate = true> <Delay = 0.00>
ST_102 : Operation 943 [1/1] (2.55ns)   --->   "%a_31 = add i32 %or_ln102_1, i32 %b_29" [md5.c:102]   --->   Operation 943 'add' 'a_31' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 944 [1/1] (0.00ns) (grouped into LUT with out node add_ln103_1)   --->   "%xor_ln103 = xor i32 %c_29, i32 4294967295" [md5.c:103]   --->   Operation 944 'xor' 'xor_ln103' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 945 [1/1] (0.00ns) (grouped into LUT with out node add_ln103_1)   --->   "%or_ln103 = or i32 %a_31, i32 %xor_ln103" [md5.c:103]   --->   Operation 945 'or' 'or_ln103' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 946 [1/1] (0.00ns) (grouped into LUT with out node add_ln103_1)   --->   "%xor_ln103_1 = xor i32 %or_ln103, i32 %b_29" [md5.c:103]   --->   Operation 946 'xor' 'xor_ln103_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 947 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln103_1 = add i32 %or_ln32_5_10, i32 %xor_ln103_1" [md5.c:103]   --->   Operation 947 'add' 'add_ln103_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 103 <SV = 102> <Delay = 6.92>
ST_103 : Operation 948 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln103 = add i32 %d_29, i32 3174756917" [md5.c:103]   --->   Operation 948 'add' 'add_ln103' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_103 : Operation 949 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%d_30 = add i32 %add_ln103_1, i32 %add_ln103" [md5.c:103]   --->   Operation 949 'add' 'd_30' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_103 : Operation 950 [1/1] (0.00ns)   --->   "%trunc_ln103 = trunc i32 %d_30" [md5.c:103]   --->   Operation 950 'trunc' 'trunc_ln103' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 951 [1/1] (0.00ns)   --->   "%lshr_ln61 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %d_30, i32 22, i32 31" [md5.c:103]   --->   Operation 951 'partselect' 'lshr_ln61' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 952 [1/1] (0.00ns)   --->   "%or_ln103_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln103, i10 %lshr_ln61" [md5.c:103]   --->   Operation 952 'bitconcatenate' 'or_ln103_1' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 953 [1/1] (2.55ns)   --->   "%d_31 = add i32 %or_ln103_1, i32 %a_31" [md5.c:103]   --->   Operation 953 'add' 'd_31' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 104 <SV = 103> <Delay = 6.92>
ST_104 : Operation 954 [1/1] (0.00ns) (grouped into LUT with out node add_ln104_1)   --->   "%xor_ln104 = xor i32 %b_29, i32 4294967295" [md5.c:104]   --->   Operation 954 'xor' 'xor_ln104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 955 [1/1] (0.00ns) (grouped into LUT with out node add_ln104_1)   --->   "%or_ln104 = or i32 %d_31, i32 %xor_ln104" [md5.c:104]   --->   Operation 955 'or' 'or_ln104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 956 [1/1] (0.00ns) (grouped into LUT with out node add_ln104_1)   --->   "%xor_ln104_1 = xor i32 %or_ln104, i32 %a_31" [md5.c:104]   --->   Operation 956 'xor' 'xor_ln104_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 957 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln104 = add i32 %c_29, i32 %or_ln32_5_2" [md5.c:104]   --->   Operation 957 'add' 'add_ln104' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_104 : Operation 958 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln104_1 = add i32 %xor_ln104_1, i32 718787259" [md5.c:104]   --->   Operation 958 'add' 'add_ln104_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 959 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%c_30 = add i32 %add_ln104_1, i32 %add_ln104" [md5.c:104]   --->   Operation 959 'add' 'c_30' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_104 : Operation 960 [1/1] (0.00ns)   --->   "%trunc_ln104 = trunc i32 %c_30" [md5.c:104]   --->   Operation 960 'trunc' 'trunc_ln104' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 961 [1/1] (0.00ns)   --->   "%lshr_ln62 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %c_30, i32 17, i32 31" [md5.c:104]   --->   Operation 961 'partselect' 'lshr_ln62' <Predicate = true> <Delay = 0.00>

State 105 <SV = 104> <Delay = 5.10>
ST_105 : Operation 962 [1/1] (0.00ns)   --->   "%or_ln104_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln104, i15 %lshr_ln62" [md5.c:104]   --->   Operation 962 'bitconcatenate' 'or_ln104_1' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 963 [1/1] (2.55ns)   --->   "%c_31 = add i32 %or_ln104_1, i32 %d_31" [md5.c:104]   --->   Operation 963 'add' 'c_31' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 964 [1/1] (0.00ns) (grouped into LUT with out node add_ln105_1)   --->   "%xor_ln105 = xor i32 %a_31, i32 4294967295" [md5.c:105]   --->   Operation 964 'xor' 'xor_ln105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 965 [1/1] (0.00ns) (grouped into LUT with out node add_ln105_1)   --->   "%or_ln105 = or i32 %c_31, i32 %xor_ln105" [md5.c:105]   --->   Operation 965 'or' 'or_ln105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 966 [1/1] (0.00ns) (grouped into LUT with out node add_ln105_1)   --->   "%xor_ln105_1 = xor i32 %or_ln105, i32 %d_31" [md5.c:105]   --->   Operation 966 'xor' 'xor_ln105_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 967 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln105_1 = add i32 %xor_ln105_1, i32 3951481745" [md5.c:105]   --->   Operation 967 'add' 'add_ln105_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 968 [1/1] (2.55ns)   --->   "%add_ln107 = add i32 %a_31, i32 %ctx_state_0_read_1" [md5.c:107]   --->   Operation 968 'add' 'add_ln107' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 969 [1/1] (2.55ns)   --->   "%add_ln110 = add i32 %d_31, i32 %ctx_state_3_read_1" [md5.c:110]   --->   Operation 969 'add' 'add_ln110' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 106 <SV = 105> <Delay = 4.37>
ST_106 : Operation 970 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln105 = add i32 %b_29, i32 %or_ln32_5_9" [md5.c:105]   --->   Operation 970 'add' 'add_ln105' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_106 : Operation 971 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%b_30 = add i32 %add_ln105_1, i32 %add_ln105" [md5.c:105]   --->   Operation 971 'add' 'b_30' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_106 : Operation 972 [1/1] (0.00ns)   --->   "%trunc_ln105 = trunc i32 %b_30" [md5.c:105]   --->   Operation 972 'trunc' 'trunc_ln105' <Predicate = true> <Delay = 0.00>
ST_106 : Operation 973 [1/1] (0.00ns)   --->   "%lshr_ln63 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %b_30, i32 11, i32 31" [md5.c:105]   --->   Operation 973 'partselect' 'lshr_ln63' <Predicate = true> <Delay = 0.00>

State 107 <SV = 106> <Delay = 4.37>
ST_107 : Operation 974 [1/1] (0.00ns)   --->   "%or_ln105_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln105, i21 %lshr_ln63" [md5.c:105]   --->   Operation 974 'bitconcatenate' 'or_ln105_1' <Predicate = true> <Delay = 0.00>
ST_107 : Operation 975 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln108_1 = add i32 %or_ln105_1, i32 %ctx_state_1_read_1" [md5.c:108]   --->   Operation 975 'add' 'add_ln108_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_107 : Operation 976 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln108 = add i32 %add_ln108_1, i32 %c_31" [md5.c:108]   --->   Operation 976 'add' 'add_ln108' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_107 : Operation 977 [1/1] (2.55ns)   --->   "%add_ln109 = add i32 %c_31, i32 %ctx_state_2_read_1" [md5.c:109]   --->   Operation 977 'add' 'add_ln109' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 978 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i32 %add_ln107" [md5.c:111]   --->   Operation 978 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_107 : Operation 979 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i32 %add_ln108" [md5.c:111]   --->   Operation 979 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_107 : Operation 980 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i128 %mrv_1, i32 %add_ln109" [md5.c:111]   --->   Operation 980 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_107 : Operation 981 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i128 %mrv_2, i32 %add_ln110" [md5.c:111]   --->   Operation 981 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_107 : Operation 982 [1/1] (0.00ns)   --->   "%ret_ln111 = ret i128 %mrv_3" [md5.c:111]   --->   Operation 982 'ret' 'ret_ln111' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.322ns
The critical path consists of the following:
	'getelementptr' operation ('data_addr', md5.c:32) [10]  (0.000 ns)
	'load' operation ('data_load', md5.c:32) on array 'data' [11]  (2.322 ns)

 <State 2>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load', md5.c:32) on array 'data' [11]  (2.322 ns)

 <State 3>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load_2', md5.c:32) on array 'data' [15]  (2.322 ns)

 <State 4>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load_12', md5.c:32) on array 'data' [20]  (2.322 ns)

 <State 5>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load_17', md5.c:32) on array 'data' [24]  (2.322 ns)

 <State 6>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load_19', md5.c:32) on array 'data' [29]  (2.322 ns)

 <State 7>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load_21', md5.c:32) on array 'data' [33]  (2.322 ns)

 <State 8>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load_23', md5.c:32) on array 'data' [38]  (2.322 ns)

 <State 9>: 2.322ns
The critical path consists of the following:
	'load' operation ('data_load_25', md5.c:32) on array 'data' [42]  (2.322 ns)

 <State 10>: 2.552ns
The critical path consists of the following:
	wire read operation ('ctx_state_3_read_1', md5.c:32) on port 'ctx_state_3_read' (md5.c:32) [6]  (0.000 ns)
	'and' operation ('and_ln39_1', md5.c:39) [156]  (0.000 ns)
	'or' operation ('or_ln39', md5.c:39) [157]  (0.000 ns)
	'add' operation ('add_ln39_1', md5.c:39) [159]  (2.552 ns)

 <State 11>: 6.923ns
The critical path consists of the following:
	wire read operation ('ctx_state_0_read_1', md5.c:32) on port 'ctx_state_0_read' (md5.c:32) [9]  (0.000 ns)
	'add' operation ('add_ln39', md5.c:39) [158]  (0.000 ns)
	'add' operation ('a', md5.c:39) [160]  (4.371 ns)
	'add' operation ('a', md5.c:39) [164]  (2.552 ns)

 <State 12>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln40', md5.c:40) [165]  (0.000 ns)
	'or' operation ('or_ln40', md5.c:40) [168]  (0.000 ns)
	'add' operation ('add_ln40_1', md5.c:40) [170]  (2.552 ns)
	'add' operation ('d', md5.c:40) [171]  (4.371 ns)

 <State 13>: 5.104ns
The critical path consists of the following:
	'add' operation ('d', md5.c:40) [175]  (2.552 ns)
	'xor' operation ('xor_ln41', md5.c:41) [177]  (0.000 ns)
	'and' operation ('and_ln41_1', md5.c:41) [178]  (0.000 ns)
	'or' operation ('or_ln41', md5.c:41) [179]  (0.000 ns)
	'add' operation ('add_ln41_1', md5.c:41) [181]  (2.552 ns)

 <State 14>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln41', md5.c:41) [180]  (0.000 ns)
	'add' operation ('c', md5.c:41) [182]  (4.371 ns)
	'add' operation ('c', md5.c:41) [186]  (2.552 ns)

 <State 15>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln42', md5.c:42) [187]  (0.000 ns)
	'or' operation ('or_ln42', md5.c:42) [190]  (0.000 ns)
	'add' operation ('add_ln42_1', md5.c:42) [192]  (2.552 ns)
	'add' operation ('b', md5.c:42) [193]  (4.371 ns)

 <State 16>: 5.104ns
The critical path consists of the following:
	'add' operation ('b', md5.c:42) [197]  (2.552 ns)
	'and' operation ('and_ln43', md5.c:43) [198]  (0.000 ns)
	'or' operation ('or_ln43', md5.c:43) [201]  (0.000 ns)
	'add' operation ('add_ln43_1', md5.c:43) [203]  (2.552 ns)

 <State 17>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln43', md5.c:43) [202]  (0.000 ns)
	'add' operation ('a', md5.c:43) [204]  (4.371 ns)
	'add' operation ('a', md5.c:43) [208]  (2.552 ns)

 <State 18>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln44', md5.c:44) [209]  (0.000 ns)
	'or' operation ('or_ln44', md5.c:44) [212]  (0.000 ns)
	'add' operation ('add_ln44_1', md5.c:44) [214]  (2.552 ns)
	'add' operation ('d', md5.c:44) [215]  (4.371 ns)

 <State 19>: 5.104ns
The critical path consists of the following:
	'add' operation ('d', md5.c:44) [219]  (2.552 ns)
	'xor' operation ('xor_ln45', md5.c:45) [221]  (0.000 ns)
	'and' operation ('and_ln45_1', md5.c:45) [222]  (0.000 ns)
	'or' operation ('or_ln45', md5.c:45) [223]  (0.000 ns)
	'add' operation ('add_ln45_1', md5.c:45) [225]  (2.552 ns)

 <State 20>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln45', md5.c:45) [224]  (0.000 ns)
	'add' operation ('c', md5.c:45) [226]  (4.371 ns)
	'add' operation ('c', md5.c:45) [230]  (2.552 ns)

 <State 21>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln46', md5.c:46) [231]  (0.000 ns)
	'or' operation ('or_ln46', md5.c:46) [234]  (0.000 ns)
	'add' operation ('add_ln46_1', md5.c:46) [236]  (2.552 ns)
	'add' operation ('b', md5.c:46) [237]  (4.371 ns)

 <State 22>: 5.104ns
The critical path consists of the following:
	'add' operation ('b', md5.c:46) [241]  (2.552 ns)
	'and' operation ('and_ln47', md5.c:47) [242]  (0.000 ns)
	'or' operation ('or_ln47', md5.c:47) [245]  (0.000 ns)
	'add' operation ('add_ln47_1', md5.c:47) [247]  (2.552 ns)

 <State 23>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln47', md5.c:47) [246]  (0.000 ns)
	'add' operation ('a', md5.c:47) [248]  (4.371 ns)
	'add' operation ('a', md5.c:47) [252]  (2.552 ns)

 <State 24>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln48_1', md5.c:48) [258]  (2.552 ns)
	'add' operation ('d', md5.c:48) [259]  (4.371 ns)

 <State 25>: 5.104ns
The critical path consists of the following:
	'add' operation ('d', md5.c:48) [263]  (2.552 ns)
	'and' operation ('and_ln49', md5.c:49) [264]  (0.000 ns)
	'or' operation ('or_ln49', md5.c:49) [267]  (0.000 ns)
	'add' operation ('add_ln49_1', md5.c:49) [269]  (2.552 ns)

 <State 26>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln49', md5.c:49) [268]  (0.000 ns)
	'add' operation ('c', md5.c:49) [270]  (4.371 ns)
	'add' operation ('c', md5.c:49) [274]  (2.552 ns)

 <State 27>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln50_1', md5.c:50) [280]  (2.552 ns)
	'add' operation ('b', md5.c:50) [281]  (4.371 ns)

 <State 28>: 5.104ns
The critical path consists of the following:
	'add' operation ('b', md5.c:50) [285]  (2.552 ns)
	'xor' operation ('xor_ln51', md5.c:51) [287]  (0.000 ns)
	'and' operation ('and_ln51_1', md5.c:51) [288]  (0.000 ns)
	'or' operation ('or_ln51', md5.c:51) [289]  (0.000 ns)
	'add' operation ('add_ln51_1', md5.c:51) [291]  (2.552 ns)

 <State 29>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln51', md5.c:51) [290]  (0.000 ns)
	'add' operation ('a', md5.c:51) [292]  (4.371 ns)
	'add' operation ('a', md5.c:51) [296]  (2.552 ns)

 <State 30>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln52', md5.c:52) [297]  (0.000 ns)
	'or' operation ('or_ln52', md5.c:52) [300]  (0.000 ns)
	'add' operation ('add_ln52_1', md5.c:52) [302]  (2.552 ns)
	'add' operation ('d', md5.c:52) [303]  (4.371 ns)

 <State 31>: 3.545ns
The critical path consists of the following:
	'add' operation ('d', md5.c:52) [307]  (2.552 ns)
	'xor' operation ('xor_ln53', md5.c:53) [309]  (0.993 ns)

 <State 32>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln53_1', md5.c:53) [313]  (2.552 ns)
	'add' operation ('c', md5.c:53) [314]  (4.371 ns)

 <State 33>: 6.097ns
The critical path consists of the following:
	'add' operation ('c', md5.c:53) [318]  (2.552 ns)
	'xor' operation ('xor_ln54', md5.c:54) [320]  (0.993 ns)
	'and' operation ('and_ln54_1', md5.c:54) [321]  (0.000 ns)
	'or' operation ('or_ln54', md5.c:54) [322]  (0.000 ns)
	'add' operation ('add_ln54_1', md5.c:54) [324]  (2.552 ns)

 <State 34>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln54', md5.c:54) [323]  (0.000 ns)
	'add' operation ('b', md5.c:54) [325]  (4.371 ns)
	'add' operation ('b', md5.c:54) [329]  (2.552 ns)

 <State 35>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln56', md5.c:56) [330]  (0.000 ns)
	'or' operation ('or_ln56', md5.c:56) [332]  (0.000 ns)
	'add' operation ('add_ln56_1', md5.c:56) [334]  (2.552 ns)
	'add' operation ('a', md5.c:56) [335]  (4.371 ns)

 <State 36>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:56) [339]  (2.552 ns)
	'and' operation ('and_ln57', md5.c:57) [340]  (0.000 ns)
	'or' operation ('or_ln57', md5.c:57) [342]  (0.000 ns)
	'add' operation ('add_ln57_1', md5.c:57) [344]  (2.552 ns)

 <State 37>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln57', md5.c:57) [343]  (0.000 ns)
	'add' operation ('d', md5.c:57) [345]  (4.371 ns)
	'add' operation ('d', md5.c:57) [349]  (2.552 ns)

 <State 38>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln58', md5.c:58) [350]  (0.000 ns)
	'or' operation ('or_ln58', md5.c:58) [353]  (0.000 ns)
	'add' operation ('add_ln58_1', md5.c:58) [355]  (2.552 ns)
	'add' operation ('c', md5.c:58) [356]  (4.371 ns)

 <State 39>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:58) [360]  (2.552 ns)
	'and' operation ('and_ln59', md5.c:59) [361]  (0.000 ns)
	'or' operation ('or_ln59', md5.c:59) [364]  (0.000 ns)
	'add' operation ('add_ln59_1', md5.c:59) [366]  (2.552 ns)

 <State 40>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln59', md5.c:59) [365]  (0.000 ns)
	'add' operation ('b', md5.c:59) [367]  (4.371 ns)
	'add' operation ('b', md5.c:59) [371]  (2.552 ns)

 <State 41>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln60', md5.c:60) [372]  (0.000 ns)
	'or' operation ('or_ln60', md5.c:60) [375]  (0.000 ns)
	'add' operation ('add_ln60_1', md5.c:60) [377]  (2.552 ns)
	'add' operation ('a', md5.c:60) [378]  (4.371 ns)

 <State 42>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:60) [382]  (2.552 ns)
	'and' operation ('and_ln61', md5.c:61) [383]  (0.000 ns)
	'or' operation ('or_ln61', md5.c:61) [386]  (0.000 ns)
	'add' operation ('add_ln61_1', md5.c:61) [388]  (2.552 ns)

 <State 43>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln61', md5.c:61) [387]  (0.000 ns)
	'add' operation ('d', md5.c:61) [389]  (4.371 ns)
	'add' operation ('d', md5.c:61) [393]  (2.552 ns)

 <State 44>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln62', md5.c:62) [394]  (0.000 ns)
	'or' operation ('or_ln62', md5.c:62) [397]  (0.000 ns)
	'add' operation ('add_ln62_1', md5.c:62) [399]  (2.552 ns)
	'add' operation ('c', md5.c:62) [400]  (4.371 ns)

 <State 45>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:62) [404]  (2.552 ns)
	'and' operation ('and_ln63', md5.c:63) [405]  (0.000 ns)
	'or' operation ('or_ln63', md5.c:63) [408]  (0.000 ns)
	'add' operation ('add_ln63_1', md5.c:63) [410]  (2.552 ns)

 <State 46>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln63', md5.c:63) [409]  (0.000 ns)
	'add' operation ('b', md5.c:63) [411]  (4.371 ns)
	'add' operation ('b', md5.c:63) [415]  (2.552 ns)

 <State 47>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln64', md5.c:64) [416]  (0.000 ns)
	'or' operation ('or_ln64', md5.c:64) [419]  (0.000 ns)
	'add' operation ('add_ln64_1', md5.c:64) [421]  (2.552 ns)
	'add' operation ('a', md5.c:64) [422]  (4.371 ns)

 <State 48>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:64) [426]  (2.552 ns)
	'and' operation ('and_ln65', md5.c:65) [427]  (0.000 ns)
	'or' operation ('or_ln65', md5.c:65) [430]  (0.000 ns)
	'add' operation ('add_ln65_1', md5.c:65) [432]  (2.552 ns)

 <State 49>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln65', md5.c:65) [431]  (0.000 ns)
	'add' operation ('d', md5.c:65) [433]  (4.371 ns)
	'add' operation ('d', md5.c:65) [437]  (2.552 ns)

 <State 50>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln66', md5.c:66) [438]  (0.000 ns)
	'or' operation ('or_ln66', md5.c:66) [441]  (0.000 ns)
	'add' operation ('add_ln66_1', md5.c:66) [443]  (2.552 ns)
	'add' operation ('c', md5.c:66) [444]  (4.371 ns)

 <State 51>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:66) [448]  (2.552 ns)
	'and' operation ('and_ln67', md5.c:67) [449]  (0.000 ns)
	'or' operation ('or_ln67', md5.c:67) [452]  (0.000 ns)
	'add' operation ('add_ln67_1', md5.c:67) [454]  (2.552 ns)

 <State 52>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln67', md5.c:67) [453]  (0.000 ns)
	'add' operation ('b', md5.c:67) [455]  (4.371 ns)
	'add' operation ('b', md5.c:67) [459]  (2.552 ns)

 <State 53>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln68', md5.c:68) [460]  (0.000 ns)
	'or' operation ('or_ln68', md5.c:68) [463]  (0.000 ns)
	'add' operation ('add_ln68_1', md5.c:68) [465]  (2.552 ns)
	'add' operation ('a', md5.c:68) [466]  (4.371 ns)

 <State 54>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:68) [470]  (2.552 ns)
	'and' operation ('and_ln69', md5.c:69) [471]  (0.000 ns)
	'or' operation ('or_ln69', md5.c:69) [474]  (0.000 ns)
	'add' operation ('add_ln69_1', md5.c:69) [476]  (2.552 ns)

 <State 55>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln69', md5.c:69) [475]  (0.000 ns)
	'add' operation ('d', md5.c:69) [477]  (4.371 ns)
	'add' operation ('d', md5.c:69) [481]  (2.552 ns)

 <State 56>: 6.923ns
The critical path consists of the following:
	'and' operation ('and_ln70', md5.c:70) [482]  (0.000 ns)
	'or' operation ('or_ln70', md5.c:70) [485]  (0.000 ns)
	'add' operation ('add_ln70_1', md5.c:70) [487]  (2.552 ns)
	'add' operation ('c', md5.c:70) [488]  (4.371 ns)

 <State 57>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:70) [492]  (2.552 ns)
	'and' operation ('and_ln71', md5.c:71) [493]  (0.000 ns)
	'or' operation ('or_ln71', md5.c:71) [496]  (0.000 ns)
	'add' operation ('add_ln71_1', md5.c:71) [498]  (2.552 ns)

 <State 58>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln71', md5.c:71) [497]  (0.000 ns)
	'add' operation ('b', md5.c:71) [499]  (4.371 ns)
	'add' operation ('b', md5.c:71) [503]  (2.552 ns)

 <State 59>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln73', md5.c:73) [504]  (0.000 ns)
	'xor' operation ('xor_ln73_1', md5.c:73) [505]  (0.000 ns)
	'add' operation ('add_ln73_1', md5.c:73) [507]  (2.552 ns)
	'add' operation ('a', md5.c:73) [508]  (4.371 ns)

 <State 60>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:73) [512]  (2.552 ns)
	'xor' operation ('xor_ln74', md5.c:74) [513]  (0.000 ns)
	'xor' operation ('xor_ln74_1', md5.c:74) [514]  (0.000 ns)
	'add' operation ('add_ln74_1', md5.c:74) [516]  (2.552 ns)

 <State 61>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln74', md5.c:74) [515]  (0.000 ns)
	'add' operation ('d', md5.c:74) [517]  (4.371 ns)
	'add' operation ('d', md5.c:74) [521]  (2.552 ns)

 <State 62>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln75', md5.c:75) [522]  (0.000 ns)
	'xor' operation ('xor_ln75_1', md5.c:75) [523]  (0.000 ns)
	'add' operation ('add_ln75_1', md5.c:75) [525]  (2.552 ns)
	'add' operation ('c', md5.c:75) [526]  (4.371 ns)

 <State 63>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:75) [530]  (2.552 ns)
	'xor' operation ('xor_ln76', md5.c:76) [531]  (0.000 ns)
	'xor' operation ('xor_ln76_1', md5.c:76) [532]  (0.000 ns)
	'add' operation ('add_ln76_1', md5.c:76) [534]  (2.552 ns)

 <State 64>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln76', md5.c:76) [533]  (0.000 ns)
	'add' operation ('b', md5.c:76) [535]  (4.371 ns)
	'add' operation ('b', md5.c:76) [539]  (2.552 ns)

 <State 65>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln77', md5.c:77) [540]  (0.000 ns)
	'xor' operation ('xor_ln77_1', md5.c:77) [541]  (0.000 ns)
	'add' operation ('add_ln77_1', md5.c:77) [543]  (2.552 ns)
	'add' operation ('a', md5.c:77) [544]  (4.371 ns)

 <State 66>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:77) [548]  (2.552 ns)
	'xor' operation ('xor_ln78', md5.c:78) [549]  (0.000 ns)
	'xor' operation ('xor_ln78_1', md5.c:78) [550]  (0.000 ns)
	'add' operation ('add_ln78_1', md5.c:78) [552]  (2.552 ns)

 <State 67>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln78', md5.c:78) [551]  (0.000 ns)
	'add' operation ('d', md5.c:78) [553]  (4.371 ns)
	'add' operation ('d', md5.c:78) [557]  (2.552 ns)

 <State 68>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln79', md5.c:79) [558]  (0.000 ns)
	'xor' operation ('xor_ln79_1', md5.c:79) [559]  (0.000 ns)
	'add' operation ('add_ln79_1', md5.c:79) [561]  (2.552 ns)
	'add' operation ('c', md5.c:79) [562]  (4.371 ns)

 <State 69>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:79) [566]  (2.552 ns)
	'xor' operation ('xor_ln80', md5.c:80) [567]  (0.000 ns)
	'xor' operation ('xor_ln80_1', md5.c:80) [568]  (0.000 ns)
	'add' operation ('add_ln80_1', md5.c:80) [570]  (2.552 ns)

 <State 70>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln80', md5.c:80) [569]  (0.000 ns)
	'add' operation ('b', md5.c:80) [571]  (4.371 ns)
	'add' operation ('b', md5.c:80) [575]  (2.552 ns)

 <State 71>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln81', md5.c:81) [576]  (0.000 ns)
	'xor' operation ('xor_ln81_1', md5.c:81) [577]  (0.000 ns)
	'add' operation ('add_ln81_1', md5.c:81) [579]  (2.552 ns)
	'add' operation ('a', md5.c:81) [580]  (4.371 ns)

 <State 72>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:81) [584]  (2.552 ns)
	'xor' operation ('xor_ln82', md5.c:82) [585]  (0.000 ns)
	'xor' operation ('xor_ln82_1', md5.c:82) [586]  (0.000 ns)
	'add' operation ('add_ln82_1', md5.c:82) [588]  (2.552 ns)

 <State 73>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln82', md5.c:82) [587]  (0.000 ns)
	'add' operation ('d', md5.c:82) [589]  (4.371 ns)
	'add' operation ('d', md5.c:82) [593]  (2.552 ns)

 <State 74>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln83', md5.c:83) [594]  (0.000 ns)
	'xor' operation ('xor_ln83_1', md5.c:83) [595]  (0.000 ns)
	'add' operation ('add_ln83_1', md5.c:83) [597]  (2.552 ns)
	'add' operation ('c', md5.c:83) [598]  (4.371 ns)

 <State 75>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:83) [602]  (2.552 ns)
	'xor' operation ('xor_ln84', md5.c:84) [603]  (0.000 ns)
	'xor' operation ('xor_ln84_1', md5.c:84) [604]  (0.000 ns)
	'add' operation ('add_ln84_1', md5.c:84) [606]  (2.552 ns)

 <State 76>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln84', md5.c:84) [605]  (0.000 ns)
	'add' operation ('b', md5.c:84) [607]  (4.371 ns)
	'add' operation ('b', md5.c:84) [611]  (2.552 ns)

 <State 77>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln85', md5.c:85) [612]  (0.000 ns)
	'xor' operation ('xor_ln85_1', md5.c:85) [613]  (0.000 ns)
	'add' operation ('add_ln85_1', md5.c:85) [615]  (2.552 ns)
	'add' operation ('a', md5.c:85) [616]  (4.371 ns)

 <State 78>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:85) [620]  (2.552 ns)
	'xor' operation ('xor_ln86', md5.c:86) [621]  (0.000 ns)
	'xor' operation ('xor_ln86_1', md5.c:86) [622]  (0.000 ns)
	'add' operation ('add_ln86_1', md5.c:86) [624]  (2.552 ns)

 <State 79>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln86', md5.c:86) [623]  (0.000 ns)
	'add' operation ('d', md5.c:86) [625]  (4.371 ns)
	'add' operation ('d', md5.c:86) [629]  (2.552 ns)

 <State 80>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln87', md5.c:87) [630]  (0.000 ns)
	'xor' operation ('xor_ln87_1', md5.c:87) [631]  (0.000 ns)
	'add' operation ('add_ln87_1', md5.c:87) [633]  (2.552 ns)
	'add' operation ('c', md5.c:87) [634]  (4.371 ns)

 <State 81>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:87) [638]  (2.552 ns)
	'xor' operation ('xor_ln88', md5.c:88) [639]  (0.000 ns)
	'xor' operation ('xor_ln88_1', md5.c:88) [640]  (0.000 ns)
	'add' operation ('add_ln88_1', md5.c:88) [642]  (2.552 ns)

 <State 82>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln88', md5.c:88) [641]  (0.000 ns)
	'add' operation ('b', md5.c:88) [643]  (4.371 ns)
	'add' operation ('b', md5.c:88) [647]  (2.552 ns)

 <State 83>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln90', md5.c:90) [648]  (0.000 ns)
	'or' operation ('or_ln90', md5.c:90) [649]  (0.000 ns)
	'xor' operation ('xor_ln90_1', md5.c:90) [650]  (0.000 ns)
	'add' operation ('add_ln90_1', md5.c:90) [652]  (2.552 ns)
	'add' operation ('a', md5.c:90) [653]  (4.371 ns)

 <State 84>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:90) [657]  (2.552 ns)
	'or' operation ('or_ln91', md5.c:91) [659]  (0.000 ns)
	'xor' operation ('xor_ln91_1', md5.c:91) [660]  (0.000 ns)
	'add' operation ('add_ln91_1', md5.c:91) [662]  (2.552 ns)

 <State 85>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln91', md5.c:91) [661]  (0.000 ns)
	'add' operation ('d', md5.c:91) [663]  (4.371 ns)
	'add' operation ('d', md5.c:91) [667]  (2.552 ns)

 <State 86>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln92', md5.c:92) [668]  (0.000 ns)
	'or' operation ('or_ln92', md5.c:92) [669]  (0.000 ns)
	'xor' operation ('xor_ln92_1', md5.c:92) [670]  (0.000 ns)
	'add' operation ('add_ln92_1', md5.c:92) [672]  (2.552 ns)
	'add' operation ('c', md5.c:92) [673]  (4.371 ns)

 <State 87>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:92) [677]  (2.552 ns)
	'or' operation ('or_ln93', md5.c:93) [679]  (0.000 ns)
	'xor' operation ('xor_ln93_1', md5.c:93) [680]  (0.000 ns)
	'add' operation ('add_ln93_1', md5.c:93) [682]  (2.552 ns)

 <State 88>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln93', md5.c:93) [681]  (0.000 ns)
	'add' operation ('b', md5.c:93) [683]  (4.371 ns)
	'add' operation ('b', md5.c:93) [687]  (2.552 ns)

 <State 89>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln94', md5.c:94) [688]  (0.000 ns)
	'or' operation ('or_ln94', md5.c:94) [689]  (0.000 ns)
	'xor' operation ('xor_ln94_1', md5.c:94) [690]  (0.000 ns)
	'add' operation ('add_ln94_1', md5.c:94) [692]  (2.552 ns)
	'add' operation ('a', md5.c:94) [693]  (4.371 ns)

 <State 90>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:94) [697]  (2.552 ns)
	'or' operation ('or_ln95', md5.c:95) [699]  (0.000 ns)
	'xor' operation ('xor_ln95_1', md5.c:95) [700]  (0.000 ns)
	'add' operation ('add_ln95_1', md5.c:95) [702]  (2.552 ns)

 <State 91>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln95', md5.c:95) [701]  (0.000 ns)
	'add' operation ('d', md5.c:95) [703]  (4.371 ns)
	'add' operation ('d', md5.c:95) [707]  (2.552 ns)

 <State 92>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln96', md5.c:96) [708]  (0.000 ns)
	'or' operation ('or_ln96', md5.c:96) [709]  (0.000 ns)
	'xor' operation ('xor_ln96_1', md5.c:96) [710]  (0.000 ns)
	'add' operation ('add_ln96_1', md5.c:96) [712]  (2.552 ns)
	'add' operation ('c', md5.c:96) [713]  (4.371 ns)

 <State 93>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:96) [717]  (2.552 ns)
	'or' operation ('or_ln97', md5.c:97) [719]  (0.000 ns)
	'xor' operation ('xor_ln97_1', md5.c:97) [720]  (0.000 ns)
	'add' operation ('add_ln97_1', md5.c:97) [722]  (2.552 ns)

 <State 94>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln97', md5.c:97) [721]  (0.000 ns)
	'add' operation ('b', md5.c:97) [723]  (4.371 ns)
	'add' operation ('b', md5.c:97) [727]  (2.552 ns)

 <State 95>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln98', md5.c:98) [728]  (0.000 ns)
	'or' operation ('or_ln98', md5.c:98) [729]  (0.000 ns)
	'xor' operation ('xor_ln98_1', md5.c:98) [730]  (0.000 ns)
	'add' operation ('add_ln98_1', md5.c:98) [732]  (2.552 ns)
	'add' operation ('a', md5.c:98) [733]  (4.371 ns)

 <State 96>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:98) [737]  (2.552 ns)
	'or' operation ('or_ln99', md5.c:99) [739]  (0.000 ns)
	'xor' operation ('xor_ln99_1', md5.c:99) [740]  (0.000 ns)
	'add' operation ('add_ln99_1', md5.c:99) [742]  (2.552 ns)

 <State 97>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln99', md5.c:99) [741]  (0.000 ns)
	'add' operation ('d', md5.c:99) [743]  (4.371 ns)
	'add' operation ('d', md5.c:99) [747]  (2.552 ns)

 <State 98>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln100', md5.c:100) [748]  (0.000 ns)
	'or' operation ('or_ln100', md5.c:100) [749]  (0.000 ns)
	'xor' operation ('xor_ln100_1', md5.c:100) [750]  (0.000 ns)
	'add' operation ('add_ln100_1', md5.c:100) [752]  (2.552 ns)
	'add' operation ('c', md5.c:100) [753]  (4.371 ns)

 <State 99>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:100) [757]  (2.552 ns)
	'or' operation ('or_ln101', md5.c:101) [759]  (0.000 ns)
	'xor' operation ('xor_ln101_1', md5.c:101) [760]  (0.000 ns)
	'add' operation ('add_ln101_1', md5.c:101) [762]  (2.552 ns)

 <State 100>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln101', md5.c:101) [761]  (0.000 ns)
	'add' operation ('b', md5.c:101) [763]  (4.371 ns)
	'add' operation ('b', md5.c:101) [767]  (2.552 ns)

 <State 101>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln102', md5.c:102) [768]  (0.000 ns)
	'or' operation ('or_ln102', md5.c:102) [769]  (0.000 ns)
	'xor' operation ('xor_ln102_1', md5.c:102) [770]  (0.000 ns)
	'add' operation ('add_ln102_1', md5.c:102) [772]  (2.552 ns)
	'add' operation ('a', md5.c:102) [773]  (4.371 ns)

 <State 102>: 5.104ns
The critical path consists of the following:
	'add' operation ('a', md5.c:102) [777]  (2.552 ns)
	'or' operation ('or_ln103', md5.c:103) [779]  (0.000 ns)
	'xor' operation ('xor_ln103_1', md5.c:103) [780]  (0.000 ns)
	'add' operation ('add_ln103_1', md5.c:103) [782]  (2.552 ns)

 <State 103>: 6.923ns
The critical path consists of the following:
	'add' operation ('add_ln103', md5.c:103) [781]  (0.000 ns)
	'add' operation ('d', md5.c:103) [783]  (4.371 ns)
	'add' operation ('d', md5.c:103) [787]  (2.552 ns)

 <State 104>: 6.923ns
The critical path consists of the following:
	'xor' operation ('xor_ln104', md5.c:104) [788]  (0.000 ns)
	'or' operation ('or_ln104', md5.c:104) [789]  (0.000 ns)
	'xor' operation ('xor_ln104_1', md5.c:104) [790]  (0.000 ns)
	'add' operation ('add_ln104_1', md5.c:104) [792]  (2.552 ns)
	'add' operation ('c', md5.c:104) [793]  (4.371 ns)

 <State 105>: 5.104ns
The critical path consists of the following:
	'add' operation ('c', md5.c:104) [797]  (2.552 ns)
	'or' operation ('or_ln105', md5.c:105) [799]  (0.000 ns)
	'xor' operation ('xor_ln105_1', md5.c:105) [800]  (0.000 ns)
	'add' operation ('add_ln105_1', md5.c:105) [802]  (2.552 ns)

 <State 106>: 4.371ns
The critical path consists of the following:
	'add' operation ('add_ln105', md5.c:105) [801]  (0.000 ns)
	'add' operation ('b', md5.c:105) [803]  (4.371 ns)

 <State 107>: 4.371ns
The critical path consists of the following:
	'add' operation ('add_ln108_1', md5.c:108) [808]  (0.000 ns)
	'add' operation ('add_ln108', md5.c:108) [809]  (4.371 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
